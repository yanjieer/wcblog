import{_ as s,o as n,c as a,a as p}from"./app-6c93334e.js";const e="/wcblog/assets/1701855668875.d4836a6a-a702bc19.png",t="/wcblog/assets/1701855705866.3146bbc3-db15fdf8.png",o="/wcblog/assets/1701855780579.e4db3cc5-b36940e1.png",c="/wcblog/assets/1701855915182.f426a45f-217de933.png",l="/wcblog/assets/1703816070646.1b9868a3-7d7381c3.png",i="/wcblog/assets/1701856066720.97f54bf6-52f9ca3b.png",u="/wcblog/assets/1701856280238.0bae6083-51032681.png",d="/wcblog/assets/1701857645967.e4de6ae3-b26bf4b8.png",r="/wcblog/assets/1701857686053.fabf4e57-cfb3fe33.png",k="/wcblog/assets/1704168123477-e7bfaf70.png",m="/wcblog/assets/1704168349987-62931228.png",v="/wcblog/assets/1704168509566-5db01b8b.png",b="/wcblog/assets/1704168728493-36b859ef.png",g="/wcblog/assets/1704168909399-d7405608.png",w="/wcblog/assets/1704169033144-6fb36f62.png",y="/wcblog/assets/1704169300638-93274487.png",h="/wcblog/assets/1704169684072-ed9d88ad.png",E="/wcblog/assets/1704169855602-0cd4d8e5.png",q="/wcblog/assets/1701937907059.e7db3668-3eded2e9.png",_="/wcblog/assets/1704188119812-66989893.png",L="/wcblog/assets/1701938250809.4045a24a-63c0dab9.png",T="/wcblog/assets/1704189139847-ed88271d.png",S="/wcblog/assets/1704189436264-cd893445.png",R="/wcblog/assets/1704189546344-70855c2b.png",x="/wcblog/assets/1704189757024-86c0971f.png",f="/wcblog/assets/1704190073215-9350e993.png",O="/wcblog/assets/1704190294049-ba27d067.png",A="/wcblog/assets/1704190544843-50d82bb9.png",M="/wcblog/assets/1704190756265-e37c0c3e.png",C="/wcblog/assets/1704194204597-b3bba475.png",D="/wcblog/assets/1704196348361-f5c8b061.png",N="/wcblog/assets/1704196478489-be2cc010.png",I="/wcblog/assets/1704197237179-a98ad794.png",F="/wcblog/assets/1704197392262-9bc7ca62.png",B="/wcblog/assets/1704197594904-8561f41e.png",H="/wcblog/assets/1704198021032-e824b7f4.png",U="/wcblog/assets/1704198247270-50005e52.png",W="/wcblog/assets/1704198403187-d4e3f999.png",Q="/wcblog/assets/1704198631712-0f9f0e8e.png",V="/wcblog/assets/1704198731002-4d2d8ff2.png",G="/wcblog/assets/1704203399251-0f2dc2ae.png",P="/wcblog/assets/1704203772352-f59c1e81.png",Y="/wcblog/assets/1704203807588-f15fe916.png",X="/wcblog/assets/1704204038984-032b4c72.png",K="/wcblog/assets/1704204154317-c851d850.png",z="/wcblog/assets/1704204534589-4e2a5ec3.png",j="/wcblog/assets/1704204741844-570cd677.png",J="/wcblog/assets/1701939335295.aec83548-6215161a.png",Z="/wcblog/assets/1704204922669-a1508abd.png",$="/wcblog/assets/1704205048358-71a245f4.png",ss="/wcblog/assets/1704205166225-8f989aa0.png",ns="/wcblog/assets/1704205367711-0f3a0afa.png",as="/wcblog/assets/1704205578467-5566ffb3.png",ps="/wcblog/assets/1704205726270-22bfb9cc.png",es="/wcblog/assets/1704205807029-28dbabf2.png",ts="/wcblog/assets/1704205988576-7065ed08.png",os="/wcblog/assets/1704206179472-745b5d70.png",cs="/wcblog/assets/1704206441922-1c60b139.png",ls="/wcblog/assets/1704206508486-a7281cd8.png",is="/wcblog/assets/1704206630010-618b1fca.png",us="/wcblog/assets/1704207088360-4fb56a78.png",ds="/wcblog/assets/1704207145455-ce307790.png",rs="/wcblog/assets/1704207245193-cb815fb9.png",ks="/wcblog/assets/1701939675962.fa7b245f-a216d297.png",ms="/wcblog/assets/1704207576168-05e623b0.png",vs="/wcblog/assets/1704207624937-e78bfbcc.png",bs="/wcblog/assets/1704207752322-686d1862.png",gs="/wcblog/assets/1704207909500-05149159.png",ws="/wcblog/assets/1704207955612-b32f6e20.png",ys="/wcblog/assets/1704208016776-788ad996.png",hs="/wcblog/assets/1704208074614-eac351a6.png",Es="/wcblog/assets/1704208134488-b7c3b998.png",qs="/wcblog/assets/1704208515324-b4509158.png",_s="/wcblog/assets/1704208605193-4ba7b857.png",Ls="/wcblog/assets/1704208829677-4f20dcf2.png",Ts="/wcblog/assets/1704208917851-81dfc0d3.png",Ss="/wcblog/assets/1704208992477-cb080b18.png",Rs="/wcblog/assets/1704209317313-5845f259.png",xs="/wcblog/assets/1704209390385-d0f8277f.png",fs="/wcblog/assets/1704209421888-dab4e345.png",Os="/wcblog/assets/1704209469643-4d3c2f11.png",As={},Ms=p('<h1 id="mysql上" tabindex="-1"><a class="header-anchor" href="#mysql上" aria-hidden="true">#</a> MySQL上</h1><h2 id="一-数据库相关概念" tabindex="-1"><a class="header-anchor" href="#一-数据库相关概念" aria-hidden="true">#</a> 一，数据库相关概念</h2><h3 id="_1-数据库的管理系统" tabindex="-1"><a class="header-anchor" href="#_1-数据库的管理系统" aria-hidden="true">#</a> 1，数据库的管理系统</h3><p>数据库管理系统是管理数据库的大型软件，英文：DataBase Management System，简称 DBMS。电脑上安装了数据库管理系统后，就可以通过数据库管理系统创建数据库来存储数据，也可以通过该系统对数据库中的数据进行数据的增删改查相关的操作。我们平时说的MySQL数据库其实是MySQL数据库管理系统。</p><p><img src="'+e+'" alt="1701855668875"></p><p>常见的数据库管理系统：</p><p><img src="'+t+'" alt="1701855705866"></p><h3 id="_2-什么是sql" tabindex="-1"><a class="header-anchor" href="#_2-什么是sql" aria-hidden="true">#</a> 2，什么是SQL</h3><p>Structured Query Language，简称 SQL，结构化查询语言，操作关系型数据库的编程语言，定义操作所有关系型数据库的统一标准，可以使用SQL操作所有的关系型数据库管理系统，以后工作中如果使用到了其他的数据库管理系统，也同样的使用SQL来操作。</p><p><img src="'+o+'" alt="1701855780579"></p><h3 id="_3-mysql的安装" tabindex="-1"><a class="header-anchor" href="#_3-mysql的安装" aria-hidden="true">#</a> 3，MySQL的安装</h3><p>直接安装小皮就行，简单粗暴，如下：</p><p><img src="'+c+'" alt="1701855915182"></p><p>这个小皮软件中，内置了很多的软件，其中就包含mysql。如果直接下载mysql安装的话，过程比较繁琐。</p><h3 id="_4-navicat-for-mysql安装" tabindex="-1"><a class="header-anchor" href="#_4-navicat-for-mysql安装" aria-hidden="true">#</a> 4，Navicat for MySQL安装</h3><p>安装了mysql以后，可以安装Navicat for MySQL软件，这个软件是用来连接mysql管理系统的。连接上后，可以通过可视化操作mysql。</p><p><img src="'+l+'" alt="1703816070646"></p><h3 id="_5-mysql的数据类型" tabindex="-1"><a class="header-anchor" href="#_5-mysql的数据类型" aria-hidden="true">#</a> 5，MySQL的数据类型</h3><p>关系型数据库：</p><ul><li>关系型数据库是建立在关系模型基础上的数据库，简单来说，关系型数据库是由多张能相互连接的二维表组成的数据库</li><li>关系型数据库都可以通过SQL进行操作，方便使用</li><li>数据存储在磁盘中，相对较安全</li></ul><p><code>订单信息表</code> 和 <code>客户信息表</code> 都是有行有列二维表我们将这样的称为关系型数据库。如下：</p><p><img src="'+i+'" alt="1701856066720"></p><p>数据模型：</p><p><img src="'+u+'" alt="1701856280238"></p><p>通过客户端可以通过数据库管理系统创建数据库，在数据库中创建表，在表中添加数据。创建的每一个数据库对应到磁盘上都是一个文件夹。</p><p>一个数据库下可以创建多张表，我们到MySQL中自带的mysql数据库的文件夹目录下：</p><p><code>db.frm</code> 是表文件， <code>db.MYD</code> 是数据文件，通过这两个文件就可以查询到数据展示成二维表的效果。</p><p>小结：</p><ul><li>MySQL中可以创建多个数据库，每个数据库对应到磁盘上的一个文件夹</li><li>在每个数据库中可以创建多个表，每张都对应到磁盘上的一个 frm 文件</li><li>每张表可以存储多条数据，数据会被存储到磁盘中 MYD 文件中</li></ul><h2 id="二-sql概述" tabindex="-1"><a class="header-anchor" href="#二-sql概述" aria-hidden="true">#</a> 二，SQL概述</h2><h3 id="_1-sql的通用语法" tabindex="-1"><a class="header-anchor" href="#_1-sql的通用语法" aria-hidden="true">#</a> 1，SQL的通用语法</h3><ul><li><p>SQL 语句可以单行或多行书写，以分号结尾。以分号结尾才是一个完整的sql语句(show databases; )。</p></li><li><p>MySQL 数据库的 SQL 语句不区分大小写，关键字建议使用大写。同样的一条sql语句写成如下的样子（Show Databases; ），一样可以运行处结果。</p></li><li><p>单行注释: -- 注释内容 或 # 注释内容(MySQL 特有)。使用 -- 添加单行注释时，--后面一定要加空格，而#没有要求。</p></li><li><p>多行注释: /* 注释 */</p></li></ul><h3 id="_2-sql分类" tabindex="-1"><a class="header-anchor" href="#_2-sql分类" aria-hidden="true">#</a> 2，SQL分类</h3><p>DDL（Data Definition Language）就是用来操作数据库，表等。</p><p><img src="'+d+'" alt="1701857645967"></p><p>DML（Data Manipulation Language）就是对表中数据进行增删改的。DQL（Data Query Language）就是对数据进行查询操作。从数据库表中查询到我们想要的数据。</p><p><img src="'+r+`" alt="1701857686053"></p><p>DML就是对数据库进行权限控制。比如我让某一个数据库表只能让某一个用户进行操作等。</p><p>总结：以后我们最常操作的是 <code>DML</code> 和 <code>DQL</code> ，因为在开发中最常操作的就是数据。</p><h2 id="三-ddl操作数据库" tabindex="-1"><a class="header-anchor" href="#三-ddl操作数据库" aria-hidden="true">#</a> 三，DDL操作数据库</h2><p>DDL主要就是对数据库进行增删改查操作。</p><h3 id="_1-查询数据库" tabindex="-1"><a class="header-anchor" href="#_1-查询数据库" aria-hidden="true">#</a> 1，查询数据库</h3><p>查询所有的数据库：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+k+`" alt="1704168123477"></p><p>上述查询到的是的这些数据库是mysql安装好自带的数据库，我们以后不要操作这些数据库。</p><h3 id="_2-创建数据库" tabindex="-1"><a class="header-anchor" href="#_2-创建数据库" aria-hidden="true">#</a> 2，创建数据库</h3><p>创建数据库：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+m+'" alt="1704168349987"></p><p>而在创建数据库的时候，并不知道db1有没有创建，直接再次创建名为db1的数据库就会出现错误。如下：</p><p><img src="'+v+`" alt="1704168509566"></p><p>为了避免上面的错误，在创建数据库的时候先做判断，如果不存在再进行创建：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+b+`" alt="1704168728493"></p><p>从上面的运行效果来看，虽然db1已经存在，再创建db1也没有报错，而创建db2数据库则创建成功</p><h3 id="_3-删除数据库" tabindex="-1"><a class="header-anchor" href="#_3-删除数据库" aria-hidden="true">#</a> 3，删除数据库</h3><p>删除数据库：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+g+`" alt="1704168909399"></p><p>删除数据库首先要判断数据库是否存在，如果存在则可以删除：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+w+`" alt="1704169033144"></p><h3 id="_4-使用数据库" tabindex="-1"><a class="header-anchor" href="#_4-使用数据库" aria-hidden="true">#</a> 4，使用数据库</h3><p>数据库创建好了，要在数据库中创建表，得先明确在哪儿个数据库中操作，此时就需要使用数据库：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">USE</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看当前使用的数据库：</p><div class="language-SQL line-numbers-mode" data-ext="SQL"><pre class="language-SQL"><code>SELECT DATABASE();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+y+`" alt="1704169300638"></p><h2 id="四-ddl操作表" tabindex="-1"><a class="header-anchor" href="#四-ddl操作表" aria-hidden="true">#</a> 四，DDL操作表</h2><h3 id="_1-查询表" tabindex="-1"><a class="header-anchor" href="#_1-查询表" aria-hidden="true">#</a> 1，查询表</h3><p>查询当前数据库下所有表的名称：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+h+`" alt="1704169684072"></p><p>我们创建的数据库中没有任何表，因此进入MySQL自带的mysql数据库，执行上述语句查看。</p><p>查询表结构：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DESC</span> 表名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+E+`" alt="1704169855602"></p><h3 id="_2-创建表" tabindex="-1"><a class="header-anchor" href="#_2-创建表" aria-hidden="true">#</a> 2，创建表</h3><p>创建表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>
    字段名<span class="token number">1</span> 数据类型<span class="token number">1</span>，
    字段名<span class="token number">2</span> 数据类型<span class="token number">2</span>，
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    字段名n 数据类型n  <span class="token comment">--注意：最后一行末尾不能加逗号</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建如下结构的表：</p><p><img src="`+q+`" alt="1701937907059"></p><p>语句如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_user<span class="token punctuation">(</span>
    id <span class="token keyword">int</span><span class="token punctuation">,</span>
		username <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		password <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span>

<span class="token keyword">DESC</span> tb_user<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+_+'" alt="1704188119812"></p><h3 id="_3-数据类型" tabindex="-1"><a class="header-anchor" href="#_3-数据类型" aria-hidden="true">#</a> 3，数据类型</h3><p>MySQL支持多种数据类型，可以分为三类：</p><ul><li>数值</li><li>日期</li><li>字符串</li></ul><p>数值：</p><ul><li>tinyint：小整数类型，占一个字节</li><li>int：大整数类型，占四个字节。如：age int</li><li>double：浮点类型，使用格式：字段名double(总长度，小数点后保留的位数)。如：source double(5,2)</li></ul><p>日期：</p><ul><li>date：日期值。只包含年月日。如：birthday date</li><li>datetime：混合日期和时间值。包含年月日时分秒。</li></ul><p>字符串：</p><ul><li>char：定长字符串。优点：存储性能高。缺点：浪费空间。如：name char(10) 如果存储的数据字符个数不足10个，也会占10个空间</li><li>varchar：变长字符串。优点：节省空间。缺点：存储性能低。如：name varchar(10) 如果存储的数据字符个数不足10个，那么数据字符个数是几就占几个空间</li></ul><p>数据类型如下图所示：</p><p><img src="'+L+`" alt="1701938250809"></p><p>案例：设计一张学生表，请注重数据类型、长度的合理性</p><ol><li><p>编号</p></li><li><p>姓名，姓名最长不超过10个汉字</p></li><li><p>性别，因为取值只有两种可能，因此最多一个汉字</p></li><li><p>生日，取值为年月日</p></li><li><p>入学成绩，小数点后保留两位</p></li><li><p>邮件地址，最大长度不超过 64</p></li><li><p>家庭联系电话，不一定是手机号码，可能会出现 - 等字符</p></li><li><p>学生状态（用数字表示，正常、休学、毕业...）</p></li></ol><p>语句设计：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">(</span>
    id <span class="token keyword">int</span><span class="token punctuation">,</span>
		name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		gender <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		birthday <span class="token keyword">date</span><span class="token punctuation">,</span>
		score <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		email <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		tel <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token keyword">status</span> <span class="token keyword">tinyint</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+T+`" alt="1704189139847"></p><h3 id="_4-删除表" tabindex="-1"><a class="header-anchor" href="#_4-删除表" aria-hidden="true">#</a> 4，删除表</h3><p>删除表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+S+`" alt="1704189436264"></p><p>删除表时判断表是否存在：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+R+`" alt="1704189546344"></p><h3 id="_5-修改表" tabindex="-1"><a class="header-anchor" href="#_5-修改表" aria-hidden="true">#</a> 5，修改表</h3><p>修改表名：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> 新的表名<span class="token punctuation">;</span>
<span class="token comment">-- 将表名student修改为stu</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+x+`" alt="1704189757024"></p><p>添加一列：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> 列名 数据类型<span class="token punctuation">;</span>
<span class="token comment">-- 给stu表添加一列address，该字段类型时=是varchar(50)</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> stu <span class="token keyword">ADD</span> address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+f+`" alt="1704190073215"></p><p>修改数据类型：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 列明 型数据类型<span class="token punctuation">;</span>
<span class="token comment">-- 将stu表中的address字段的类型改为char(50)</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> stu <span class="token keyword">MODIFY</span> address <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+O+`" alt="1704190294049"></p><p>修改列明和数据类型：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 CHANGE 列明 新列明 新数据类型<span class="token punctuation">;</span>
<span class="token comment">-- 将stu表中的address字段名改为addr，类型改为varchar(50)</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> stu CHANGE address addr <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+A+`" alt="1704190544843"></p><p>删除列：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> 列明；
<span class="token comment">-- 将stu表中的addr字段删除</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> stu <span class="token keyword">DROP</span> addr<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+M+`" alt="1704190756265"></p><h2 id="五-dml" tabindex="-1"><a class="header-anchor" href="#五-dml" aria-hidden="true">#</a> 五，DML</h2><p>DML主要是对数据进行增(insert)删(delete)改(update)操作。</p><h3 id="_1-添加数据" tabindex="-1"><a class="header-anchor" href="#_1-添加数据" aria-hidden="true">#</a> 1，添加数据</h3><p>给指定列添加数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名<span class="token punctuation">(</span>列名<span class="token number">1</span>，列名<span class="token number">2</span>，<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span>值<span class="token number">1</span>，值<span class="token number">2</span>，<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 给指定列添加数据</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stu<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;zs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+C+`" alt="1704194204597"></p><p>给全部列添加数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名 <span class="token keyword">VALUES</span><span class="token punctuation">(</span>值<span class="token number">1</span>，值<span class="token number">2</span>，<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 给全部列添加数据(写列名)</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stu<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>gender<span class="token punctuation">,</span>birthday<span class="token punctuation">,</span>score<span class="token punctuation">,</span>email<span class="token punctuation">,</span>tel<span class="token punctuation">,</span><span class="token keyword">status</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2000-10-10&#39;</span><span class="token punctuation">,</span><span class="token number">99.5</span><span class="token punctuation">,</span><span class="token string">&#39;ls@qq.com&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;15588888888&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+D+`" alt="1704196348361"></p><p>给全列添加数据，列名是不用写的：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名 <span class="token keyword">VALUES</span><span class="token punctuation">(</span>值<span class="token number">1</span>，值<span class="token number">2</span>，<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>；
<span class="token comment">-- 给全列添加数据，列名是可以省略不写的</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stu <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;ww&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;2000-10-01&#39;</span><span class="token punctuation">,</span><span class="token number">98.88</span><span class="token punctuation">,</span><span class="token string">&#39;ww@qq.com&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;15588888666&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+N+`" alt="1704196478489"></p><p>批量添加数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名<span class="token punctuation">(</span>列名<span class="token number">1</span><span class="token punctuation">,</span>列名<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名 <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
<span class="token comment">-- 批量添加数据</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stu <span class="token keyword">VALUES</span>
    <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;wc&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;2003-10-01&#39;</span><span class="token punctuation">,</span><span class="token number">88.88</span><span class="token punctuation">,</span><span class="token string">&#39;wc@qq.com&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;15599999666&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&#39;xq&#39;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&#39;2002-10-01&#39;</span><span class="token punctuation">,</span><span class="token number">78.88</span><span class="token punctuation">,</span><span class="token string">&#39;xq@qq.com&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;15588888777&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&#39;ly&#39;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&#39;2001-10-01&#39;</span><span class="token punctuation">,</span><span class="token number">68.88</span><span class="token punctuation">,</span><span class="token string">&#39;ly@qq.com&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;15588888555&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+I+`" alt="1704197237179"></p><p>查询所有的语句：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
<span class="token comment">-- 查询所有学生的信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+F+'" alt="1704197392262"></p><h3 id="_2-修改数据" tabindex="-1"><a class="header-anchor" href="#_2-修改数据" aria-hidden="true">#</a> 2，修改数据</h3><p>当前表中的数据如下：</p><p><img src="'+B+`" alt="1704197594904"></p><p>修改表数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> 表名 <span class="token keyword">SET</span> 列名<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">,</span>列名<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token keyword">WHERE</span> 条件<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">-- 修改语句中如果不加条件，则将所有数据都修改</span>
<span class="token comment">-- 像上面的语句中的括号，表示写在sql语句中可以省略这部分</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将wc性别修改成0：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> stu <span class="token keyword">SET</span> gender<span class="token operator">=</span><span class="token string">&#39;0&#39;</span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token operator">=</span><span class="token string">&#39;wc&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+H+'" alt="1704198021032"></p><p>将wc生日改成2023-02-02，分数改为100.00：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> stu <span class="token keyword">SET</span> birthday<span class="token operator">=</span><span class="token string">&#39;2023-02-02&#39;</span><span class="token punctuation">,</span>score<span class="token operator">=</span><span class="token number">100.00</span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token operator">=</span><span class="token string">&#39;wc&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="'+U+`" alt="1704198247270"></p><p>如果UPDATE语句没有加WHERE条件，则会将表中所有数据全部修改：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> stu <span class="token keyword">SET</span> gender<span class="token operator">=</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+W+'" alt="1704198403187"></p><h3 id="_3-删除数据" tabindex="-1"><a class="header-anchor" href="#_3-删除数据" aria-hidden="true">#</a> 3，删除数据</h3><p>删除数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> 表名 <span class="token punctuation">[</span><span class="token keyword">WHERE</span> 条件<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除wc记录：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token operator">=</span><span class="token string">&#39;wc&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="'+Q+`" alt="1704198631712"></p><p>删除表中所有数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+V+`" alt="1704198731002"></p><h2 id="六-dql-重点" tabindex="-1"><a class="header-anchor" href="#六-dql-重点" aria-hidden="true">#</a> 六，DQL(重点)</h2><h3 id="_1-基础查询" tabindex="-1"><a class="header-anchor" href="#_1-基础查询" aria-hidden="true">#</a> 1，基础查询</h3><p>查询的完整语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
    字段列表
<span class="token keyword">FROM</span>
    表名列表
<span class="token keyword">WHERE</span>
    条件列表
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
    分组字段
<span class="token keyword">HAVING</span>
    分组后条件
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
    排序字段
<span class="token keyword">LIMIT</span> 
    分页限定
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在演示查询语句之前，先准备一些数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 删除stu表</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> stu<span class="token punctuation">;</span>

<span class="token comment">-- 创建stu表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> stu<span class="token punctuation">(</span>
    id <span class="token keyword">int</span><span class="token punctuation">,</span>
		name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		age <span class="token keyword">int</span><span class="token punctuation">,</span>
		sex <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		math <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		english <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		hire_date <span class="token keyword">date</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 添加数据</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stu<span class="token punctuation">(</span>id<span class="token punctuation">,</span>NAME<span class="token punctuation">,</span>age<span class="token punctuation">,</span>sex<span class="token punctuation">,</span>address<span class="token punctuation">,</span>math<span class="token punctuation">,</span>english<span class="token punctuation">,</span>hire_date<span class="token punctuation">)</span> 
<span class="token keyword">VALUES</span> 
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;马运&#39;</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;杭州&#39;</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token string">&#39;1995-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;马花疼&#39;</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;深圳&#39;</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token string">&#39;1998-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;马斯克&#39;</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;香港&#39;</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token string">&#39;1999-09-02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;柳白&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;湖南&#39;</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token string">&#39;1997-09-05&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&#39;柳青&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;湖南&#39;</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">&#39;1998-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&#39;刘德花&#39;</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;香港&#39;</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token string">&#39;1998-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">&#39;张学右&#39;</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;香港&#39;</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token string">&#39;1998-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">&#39;德玛西亚&#39;</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;南-09-02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句代码演示：</p><p><img src="`+G+`" alt="1704203399251"></p><p>查询多个字段语法格式：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
<span class="token comment">-- 上面的字段列表不建议使用*，因为在这写\\*不方便我们阅读sql语句。</span>
<span class="token comment">-- 如果写字段列表的话，可以添加注释对每一个字段进行说明。 </span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 表名；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+P+'" alt="1704203772352"></p><p><img src="'+Y+`" alt="1704203807588"></p><p>DISTINCT表示去重复记录：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> 字段列表 <span class="token keyword">FROM</span> 表名；
<span class="token comment">-- 去除重复age</span>
<span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> age <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
<span class="token comment">-- 去除重复address</span>
<span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> address <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+X+'" alt="1704204038984"></p><p><img src="'+K+`" alt="1704204154317"></p><p>AS可以用来起别名：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">AS</span> 用来起别名，也可以省略不写
<span class="token comment">-- 给name，age起别名</span>
<span class="token keyword">SELECT</span> id<span class="token punctuation">,</span>name <span class="token keyword">AS</span> username<span class="token punctuation">,</span>age userage <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+z+`" alt="1704204534589"></p><p>查询姓名、数学成绩、英语成绩。并通过as给math和english起别名（as关键字可以省略）：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span>math <span class="token keyword">AS</span> 数学成绩<span class="token punctuation">,</span>english <span class="token keyword">AS</span> 英语成绩 <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span>math 数学成绩<span class="token punctuation">,</span>english 英语成绩 <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+j+`" alt="1704204741844"></p><h3 id="_2-条件查询" tabindex="-1"><a class="header-anchor" href="#_2-条件查询" aria-hidden="true">#</a> 2，条件查询</h3><p>条件查询：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> 条件列表<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>条件列表可以使用以下运算符：</p><p><img src="`+J+`" alt="1701939335295"></p><p>查询年龄大于20的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> age<span class="token operator">&gt;</span><span class="token number">20</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+Z+`" alt="1704204922669"></p><p>查询年龄大于等于20岁的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> age<span class="token operator">&gt;=</span><span class="token number">20</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+$+`" alt="1704205048358"></p><p>查询年龄大于等于20岁 并且 年龄 小于等于 30岁 的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> age<span class="token operator">&gt;=</span><span class="token number">20</span> <span class="token operator">&amp;&amp;</span> age<span class="token operator">&lt;=</span><span class="token number">30</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> age<span class="token operator">&gt;=</span><span class="token number">20</span> <span class="token operator">AND</span> age<span class="token operator">&lt;=</span><span class="token number">30</span><span class="token punctuation">;</span>
<span class="token comment">-- &amp;&amp; 和 AND 都有并且的意思。建议使用AND</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+ss+`" alt="1704205166225"></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 上面的代码也可使使用 BETWEEN...AND 来实现</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> age <span class="token operator">BETWEEN</span> <span class="token number">20</span> <span class="token operator">AND</span> <span class="token number">30</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+ns+`" alt="1704205367711"></p><p>查询入学日期在&#39;1998-09-01&#39; 到 &#39;1999-09-01&#39; 之间的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> hire_date <span class="token operator">BETWEEN</span> <span class="token string">&#39;1998-09-01&#39;</span> <span class="token operator">AND</span> <span class="token string">&#39;1999-09-01&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+as+`" alt="1704205578467"></p><p>查询年龄等于18岁的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+ps+`" alt="1704205726270"></p><p>查询年龄不等于18岁的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> age<span class="token operator">!=</span><span class="token number">18</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> age<span class="token operator">&lt;&gt;</span><span class="token number">18</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+es+`" alt="1704205807029"></p><p>查询年龄等于18岁 或者 年龄等于20岁 或者 年龄等于22岁的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> age<span class="token operator">=</span><span class="token number">18</span> <span class="token operator">OR</span> age<span class="token operator">=</span><span class="token number">20</span> <span class="token operator">OR</span> age<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> age <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+ts+`" alt="1704205988576"></p><p>查询英语成绩为 null的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- SELECT * FROM stu WHERE english=NULL; -- 这个语句是不行的</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> english <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> english <span class="token operator">is</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token comment">-- NULL值的比较不能使用 = 或者 ！= 。需要使用 IS 或者 IS NOT</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+os+`" alt="1704206179472"></p><p>模糊查询需要使用like关键字，也可以使用通配符进行占位:</p><ul><li>_:代表单个任意字符</li><li>%：代表任意个数字符</li></ul><p>查询姓&#39;马&#39;的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;马%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+cs+`" alt="1704206441922"></p><p>查询第二个字是&#39;花&#39;的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;_花%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+ls+`" alt="1704206508486"></p><p>查询名字中包含 &#39;德&#39; 的学员信息:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;%德%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+is+`" alt="1704206630010"></p><h3 id="_3-排序查询" tabindex="-1"><a class="header-anchor" href="#_3-排序查询" aria-hidden="true">#</a> 3，排序查询</h3><p>排序查询：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 排序字段名<span class="token number">1</span><span class="token punctuation">[</span>排序方式<span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>排序字段名<span class="token number">2</span><span class="token punctuation">[</span>排序方式<span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上述语句中的排序方式有两种，分别是：</p><ul><li>ASC：升序排序(默认值)</li><li>DESC：降序排序</li><li>如果有多个排序条件，当前面的条件值一样时，才会根据第二个条件进行判断</li></ul><p>查询学生信息，按照年龄升序排列 ：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> age<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+us+`" alt="1704207088360"></p><p>查询学生信息，按照数学成绩降序排列：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> math <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+ds+`" alt="1704207145455"></p><p>查询学生信息，按照数学成绩降序排列，如果数学成绩一样，再按照英语成绩升序排列：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> math <span class="token keyword">DESC</span><span class="token punctuation">,</span>english <span class="token keyword">ASC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+rs+`" alt="1704207245193"></p><h3 id="_4-聚合函数" tabindex="-1"><a class="header-anchor" href="#_4-聚合函数" aria-hidden="true">#</a> 4，聚合函数</h3><p>将一列数据作为一个整体，进行纵向计算。(现有一需求让我们求表中所有数据的数学成绩的总和。这就是对math字段进行纵向求和。)</p><p>聚合函数分类：</p><table><thead><tr><th>函数名</th><th>功能</th></tr></thead><tbody><tr><td>count(列名)</td><td>统计数量（一般选用不为null的列）</td></tr><tr><td>max(列名)</td><td>最大值</td></tr><tr><td>min(列名)</td><td>最小值</td></tr><tr><td>sum(列名)</td><td>求和</td></tr><tr><td>avg(列名)</td><td>平均值</td></tr></tbody></table><p>聚合函数：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 聚合函数名<span class="token punctuation">(</span>列名<span class="token punctuation">)</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>  
 <span class="token comment">-- null 值不参与所有聚合函数运算</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>假设有如下表：</p><p><img src="`+ks+`" alt="1701939675962"></p><p>通过id统计班级一共有多少个学生：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+ms+`" alt="1704207576168"></p><p>通过english统计班级一共有多少个学生：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>english<span class="token punctuation">)</span> <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+vs+`" alt="1704207624937"></p><p>上面语句根据某个字段进行统计，如果该字段某一行的值为NULL的话，将不会被统计。所以可以用COUNT来实现。* 表示所有字段数据，一行中也不可能所有的数据都为NULL，所以建议使用 COUNT(*)：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+bs+`" alt="1704207752322"></p><p>查询数学成绩的最高分：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+gs+`" alt="1704207909500"></p><p>查询数学成绩的最低分：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+ws+`" alt="1704207955612"></p><p>查询数学成绩的总分：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+ys+`" alt="1704208016776"></p><p>查询数学成绩的平均分：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+hs+`" alt="1704208074614"></p><p>查询英语成绩的最低分：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>english<span class="token punctuation">)</span> <span class="token keyword">FROM</span> stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+Es+`" alt="1704208134488"></p><h3 id="_5-分组查询" tabindex="-1"><a class="header-anchor" href="#_5-分组查询" aria-hidden="true">#</a> 5，分组查询</h3><p>分组查询：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token punctuation">[</span><span class="token keyword">WHERE</span> 分组前条件限定<span class="token punctuation">]</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 分组字段名 <span class="token punctuation">[</span><span class="token keyword">HAVING</span> 分组后条件过滤<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">-- 分组之后，查询的字段为聚合函数和分组字段，查询其他字段无任何意义</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查询男同学和女同学各自的数学平均分：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> sex<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token keyword">FROM</span> stu <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> sex<span class="token punctuation">;</span>
<span class="token comment">-- 分组之后查询的字段为聚合函数和分组字段，查询其它字段无任何意义</span>
<span class="token comment">-- SELECT name,sex,AVG(math) FROM stu GROUP BY sex; -- 这里查询name字段就没有任何意义</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+qs+'" alt="1704208515324"></p><p><img src="'+_s+`" alt="1704208605193"></p><p>查询男同学和女同学各自的数学平均分，以及各自人数：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> sex<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> stu <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> sex<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+Ls+`" alt="1704208829677"></p><p>查询男同学和女同学各自的数学平均分，以及各自人数，要求：分数低于70分的不参与分组：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> sex<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> math<span class="token operator">&gt;</span><span class="token number">70</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> sex<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+Ts+`" alt="1704208917851"></p><p>查询男同学和女同学各自的数学平均分，以及各自人数，要求：分数低于70分的不参与分组，分组之后人数大于2个的：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> sex<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> math<span class="token operator">&gt;</span><span class="token number">70</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> sex <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+Ss+`" alt="1704208992477"></p><p>WHERE和HAVING区别：</p><ul><li>执行时机不一样：WHERE是分组之前进行限定，不满足WHERE条件则不参与分组，而HAVING是对分组之后对结果进行过滤</li><li>可以判断的条件不一样：WHERE不能对聚合函数进行判断，HAVING可以。</li></ul><h3 id="_6-分页查询" tabindex="-1"><a class="header-anchor" href="#_6-分页查询" aria-hidden="true">#</a> 6，分页查询</h3><p>分页查询：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token keyword">LIMIT</span> 起始索引，查询条目数<span class="token punctuation">;</span>
<span class="token comment">-- 上述语句中的起始索引是从0开始</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>从0开始查询，查询3条数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+Rs+`" alt="1704209317313"></p><p>每页显示3条数据，查询第1页数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+xs+`" alt="1704209390385"></p><p>每页显示3条数据，查询第2页数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">LIMIT</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+fs+`" alt="1704209421888"></p><p>每页显示3条数据，查询第3页数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stu <span class="token keyword">LIMIT</span> <span class="token number">6</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+Os+`" alt="1704209469643"></p><p>从上面的练习推导出起始索引计算公式：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>起始索引 <span class="token operator">=</span> <span class="token punctuation">(</span>当前页码 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> 每页显示的条数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,371),Cs=[Ms];function Ds(Ns,Is){return n(),a("div",null,Cs)}const Bs=s(As,[["render",Ds],["__file","01-MySQLshang.html.vue"]]);export{Bs as default};
