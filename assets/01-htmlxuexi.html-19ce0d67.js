import{_ as s,o as a,c as t,a as p}from"./app-462a292a.js";const n="/wcblog/assets/1692700646569-af3cc654.png",e="/wcblog/assets/1692701433337-338f63e6.png",c="/wcblog/assets/1692588370508.8d0890fe-19a48fa8.png",i="/wcblog/assets/1692599196549.1d603f0a-cdc7a084.png",o="/wcblog/assets/1692599257316.d202a394-3c76b064.png",l="/wcblog/assets/1692599329603.4a4021ee-7ad5e90b.png",r="/wcblog/assets/1692599493924.883caf96-afcd13f4.png",g="/wcblog/assets/1692600660785.e535f814-1697097523757-ae363bc7.png",d="/wcblog/assets/1697097544173-bb112c5d.png",m="/wcblog/assets/1692600815022.d39e64ed-1697097588829-ede5eaa4.png",b="/wcblog/assets/1692601037466.8cc7b654-1697097609706-0da42996.png",h="/wcblog/assets/1692601393495.f42df64b-1697097610258-74ccd50c.png",_="/wcblog/assets/1692601417418.99eb7893-1697097610258-ad1c8f6e.png",u="/wcblog/assets/1692601469169.2f64ac9f-1697097610422-ef19d7c0.png",f="/wcblog/assets/1692601507254.3dec9ec3-1697097610400-b8b5edea.png",v="/wcblog/assets/1692601532146.3c488696-1697097610459-f6f56cf2.png",w="/wcblog/assets/1692601548666.816f5075-1697097610435-7be0bc94.png",k="/wcblog/assets/1692601591970.4b554dab-1697097610515-37da2aad.png",x="/wcblog/assets/1692601114628.2e547af6-1697097610512-77139d9f.png",S="/wcblog/assets/1692601155954.2484bb7b-1697097610835-a236a0f0.png",T="/wcblog/assets/1692601816629.43113154-1697097610843-497b7016.png",y="/wcblog/assets/1692602669055.78835c8d-1697097677576-45b9e715.png",C="/wcblog/assets/1692602774383.50d8df2b-1697097677631-bfbfe9f9.png",H="/wcblog/assets/1692602839547.d3333c8d-1697097691156-3aadd322.png",q="/wcblog/assets/1697097784094-6a89f7f5.png",W="/wcblog/assets/1692603947933.824876ad-1697097812588-46002f1c.png",L="/wcblog/assets/1692604371730.be31ce15-1697097828485-23051e18.png",M="/wcblog/assets/1692605041177.4baa0583-1697097828494-d486efe8.png",E="/wcblog/assets/1692605212491.729b6171-1697097884866-ccd3bbdb.png",z="/wcblog/assets/1692606014899.edb787e6-1697097885099-9a5eff38.png",N="/wcblog/assets/1692610454422.8b202560-1697097885156-dc37ab20.png",j="/wcblog/assets/1692606610840.77f2baa3-1697097885099-a341987c.png",A="/wcblog/assets/1692606862748.07ac2e0b-1697097885084-4a1b000f.png",O="/wcblog/assets/1692604483064.db9db366-1697097909403-c94293b7.png",D="/wcblog/assets/1692606924627.b2aba6b4-1697097909404-50bd4680.png",V="/wcblog/assets/1692606938226.f690d123-1697097909433-672f398d.png",P="/wcblog/assets/1692606964556.5a8390e1-1697097909555-e96af947.png",F="/wcblog/assets/1692608861255.1e9f4752-1697097909625-a452a5d2.png",U="/wcblog/assets/1692609000727.c6fff413-1697097936014-e0b81471.png",K="/wcblog/assets/1692609036577.02232a06-1697097936201-e3b678be.png",B="/wcblog/assets/1692609097726.9acc386c-1697097936316-2bca52ec.png",R="/wcblog/assets/1692609126715.f5482ff6-1697097936320-93496f98.png",Z="/wcblog/assets/1692609176225.bd6b6830-1697097936320-8de31b83.png",G="/wcblog/assets/1692609206096.fd6f2899-1697097936442-d2c58e18.png",I="/wcblog/assets/1692609236508.840f3ba5-1697097936443-9c33f728.png",J="/wcblog/assets/1692610601785.4055618f-1697097962542-e9049fb8.png",X="/wcblog/assets/1692610691316.5e392e85-1697097962802-181e8a66.png",Y="/wcblog/assets/1692610709734.3140d561-1697097962565-3d84c6fb.png",Q="/wcblog/assets/1692610734381.3a047cc9-1697097962802-88b9d1df.png",$="/wcblog/assets/1692610753790.f63301a4-1697097962803-c7c9c5ff.png",ss="/wcblog/assets/1692610771423.a51f4403-1697097962803-24d9d1de.png",as="/wcblog/assets/1692610807312.ddc2355c-1697097962811-d7543530.png",ts="/wcblog/assets/1692610836155.9d9220ef-1697097962812-2d058296.png",ps="/wcblog/assets/1692610859310.f656b0ac-1697097962812-42274d89.png",ns="/wcblog/assets/1692609528485.db09dbd0-1697097985117-b0128e45.png",es="/wcblog/assets/1692609577931.1b3757ef-1697097985325-3ff55841.png",cs="/wcblog/assets/1692611016919.07887584-1697097985455-fac0f6b1.png",is="/wcblog/assets/1692586778931.b062ee79-b3c7c529.png",os="/wcblog/assets/1692586791762.93ca084e-0b07e8e6.png",ls="/wcblog/assets/1692586815673.b725e5c0-b25febcf.png",rs="/wcblog/assets/1692586887288.cd1e3425-5f2f5f4d.png",gs="/wcblog/assets/1692586910823.9aa04e86-553adbac.png",ds="/wcblog/assets/1692587406035.1b6cb2fa-e4399abf.png",ms="/wcblog/assets/1692587485528.89bff11b-2e663494.png",bs="/wcblog/assets/1692587603552.212339c7-f0f2d3c4.png",hs="/wcblog/assets/1692587990336.a0810ef0-99565ec5.png",_s="/wcblog/assets/1692588103254.9adf1fc9-a86817f0.png",us="/wcblog/assets/1692588247860.052a5c02-f5ff9021.png",fs="/wcblog/assets/1692756789441.49d374f6-1697032928934-f662dd99.png",vs="/wcblog/assets/1692756934023.13225790-1697032928933-634d2872.png",ws="/wcblog/assets/1692756982400.8c594c93-1697032927348-8e95941e.png",ks="/wcblog/assets/1692757155683.07079e60-1697032928934-26e422e5.png",xs="/wcblog/assets/1697033109988-d94a5b93.png",Ss="/wcblog/assets/1692694814607.700fc6d4-1697033139390-b278c270.png",Ts="/wcblog/assets/1692694893007.c0c54511-1697033139389-fae8e34f.png",ys="/wcblog/assets/1692695207451.e0f5814e-1697033147151-d2b6d147.png",Cs="/wcblog/assets/1692695407516.9cc7ee12-1697033147150-f0b7b8de.png",Hs="/wcblog/assets/1692695500971.76be4494-1697033148042-a1a94fe9.png",qs="/wcblog/assets/1692695756158.b1ddcfd4-1697033148042-64d815c2.png",Ws="/wcblog/assets/1692695828735.8a069981-1697033148043-4f6d0d03.png",Ls="/wcblog/assets/1692696012289.6edaad51-1697033169621-e9960b1f.png",Ms="/wcblog/assets/1692696125185.e5e3e651-1697033198798-c09d7e3d.png",Es="/wcblog/assets/1692696275287.bd51a447-1697033199233-4e061fa2.png",zs="/wcblog/assets/1692696369885.cccb8084-1697033200780-36b1f068.png",Ns="/wcblog/assets/1692696380938.df530c9a-1697033201209-8e5ae20b.png",js="/wcblog/assets/1692696433026.b9127a63-1697033201225-00be66d3.png",As="/wcblog/assets/1692696473394.03f543fc-1697033202263-6e8d4ee1.png",Os="/wcblog/assets/1692696500012.ed4c48fe-1697033203319-ba1cbd5b.png",Ds="/wcblog/assets/1692696530849.bddf091e-1697033204379-344fb43b.png",Vs="/wcblog/assets/1692696574899.a2f836f0-26371682.png",Ps="/wcblog/assets/1692696616372.ed3c22f3-43c55634.png",Fs="/wcblog/assets/1692696636579.8aa95bdd-1697033206449-2162a677.png",Us="/wcblog/assets/1692696680113.9ec965f6-1697033209219-55b4517e.png",Ks="/wcblog/assets/1692696743393.ca1a4eea-1697033209220-716f3ecd.png",Bs="/wcblog/assets/1692696777443.1f0e3fe3-1697033210512-64c599e7.png",Rs="/wcblog/assets/1692696858391.eb28d546-1697033227131-b52c0162.png",Zs="/wcblog/assets/1692696896228.93ba81f8-1697033228077-6f210df1.png",Gs="/wcblog/assets/1692697004794.0687c563-f467a794.png",Is="/wcblog/assets/1692697040406.d898e081-4e546295.png",Js="/wcblog/assets/1692697066685.297be9bc-1697033229523-bb9f93fb.png",Xs="/wcblog/assets/1692697098263.422efaaa-1697033231645-ccb9b013.png",Ys="/wcblog/assets/1692697126813.c7139d04-1697033232670-2395864d.png",Qs="/wcblog/assets/1692697190517.b9a4af1b-1697033233729-f6dd3aba.png",$s={},sa=p('<h1 id="_01-html学习" tabindex="-1"><a class="header-anchor" href="#_01-html学习" aria-hidden="true">#</a> 01-HTML学习</h1><h2 id="相关软件安装网址" tabindex="-1"><a class="header-anchor" href="#相关软件安装网址" aria-hidden="true">#</a> 相关软件安装网址</h2><p><strong>1. 安装Typora</strong>:https://www.typora.io/</p><p><strong>2. 安装Vscode</strong>:https://code.visualstudio.com/</p><p><strong>3. 安装 git</strong>:https://git-scm.com/download/win</p><p><strong>4. 安装Node</strong>:https://nodejs.org/download/release/v16.20.2/</p><h2 id="第一节-typora的相关操作方法" tabindex="-1"><a class="header-anchor" href="#第一节-typora的相关操作方法" aria-hidden="true">#</a> 第一节 Typora的相关操作方法</h2><h3 id="_1-标题" tabindex="-1"><a class="header-anchor" href="#_1-标题" aria-hidden="true">#</a> 1. 标题</h3><p>格式如下：</p><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> <img src="'+n+'" alt="1692700646569"></h3><h3 id="_2-引用" tabindex="-1"><a class="header-anchor" href="#_2-引用" aria-hidden="true">#</a> 2. 引用</h3><p>在文档中想要让文本内容以 引用 方式展示，可通过 <code>&gt; 内容</code> 格式实现。</p><blockquote><p>内容</p></blockquote><h3 id="_3-列表" tabindex="-1"><a class="header-anchor" href="#_3-列表" aria-hidden="true">#</a> 3. 列表</h3><p><strong>无序列表</strong></p><p>想要以列表的形式展示数据，可以通过 <code>- 内容</code> 格式实现</p><p><img src="'+e+'" alt="1692701433337"></p><p>输出结果:</p><ul><li>CPU</li><li>硬盘 <ul><li>普通硬盘</li><li>固态硬盘</li></ul></li><li>主板</li></ul><p><strong>有序列表</strong></p><p>​ 1.CPU</p><p>​ 2.硬盘</p><h3 id="_4-选择代码类型" tabindex="-1"><a class="header-anchor" href="#_4-选择代码类型" aria-hidden="true">#</a> 4. 选择代码类型</h3><p>格式: ```+语言类型</p><p>如:```+HTML</p><p>输出结果:</p><div class="language-HTML line-numbers-mode" data-ext="HTML"><pre class="language-HTML"><code>&lt;div&gt;\n    我是一个孤独的div\n&lt;/div&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-插入图片的方式" tabindex="-1"><a class="header-anchor" href="#_5-插入图片的方式" aria-hidden="true">#</a> 5. 插入图片的方式</h3><p>想要在文档中显示图片时，可以通过 <code>![](图片路径)</code> 来展示，但这种编写方式比较麻烦，因为需要自己录入图片的路径，所以一般不会这么写入图片，而是选择直接 复制图片 或 截图 直接粘贴到文档中，Typora可以自动帮助我们生成图片格式。</p><h2 id="第二节-vscode的相关用法" tabindex="-1"><a class="header-anchor" href="#第二节-vscode的相关用法" aria-hidden="true">#</a> 第二节 VSCODE的相关用法</h2><h3 id="_1-一些常用快捷键" tabindex="-1"><a class="header-anchor" href="#_1-一些常用快捷键" aria-hidden="true">#</a> 1. 一些常用快捷键：</h3><ul><li>快速生成或取消注释：Ctrl + /</li><li>代码格式化：Shift+Alt+F</li><li>向上或向下移动一行：Alt+Up 或 Alt+Down</li><li>快速复制一行代码：Shift+Alt+Up 或 Shift+Alt+Down</li><li>快速保存：Ctrl + S</li><li>快速查找：Ctrl + F</li><li>快速替换：Ctrl + H</li><li>快速删除某一行：Ctrl + X</li></ul><h3 id="_2-配置步骤" tabindex="-1"><a class="header-anchor" href="#_2-配置步骤" aria-hidden="true">#</a> 2. 配置步骤：</h3><ul><li><strong>自动保存</strong>（Auto Save）：文件 —&gt; 自动保存</li><li><strong>修改代码字体大小</strong>（Front Size）：文件 —&gt; 首选项 —&gt; 设置 —&gt; 搜索mouse —&gt; 选中Editor:Mouse Wheel Zoom</li><li><strong>代码自动换行</strong>（Word Wrap）：文件 —&gt; 首选项 —&gt; 设置 —&gt; 搜索 Word Wrap —&gt; Editor: Word Wrap 的内容改为 on</li><li><strong>空格的渲染方式</strong>（Render Whitespace）（Tab Size代码缩进）：文件 —&gt; 首选项 —&gt; 设置 —&gt; 搜索 Tab Size —&gt; Editor: Tab Size 的内容改为 2</li></ul><h3 id="_3-安装一些vscode插件" tabindex="-1"><a class="header-anchor" href="#_3-安装一些vscode插件" aria-hidden="true">#</a> 3. 安装一些VSCODE插件</h3><p>点击vscode中的插件面板</p><p><img src="'+c+'" alt="1692588370508"></p><p>目前安装的插件</p><ul><li>中文插件：Chinese</li><li>颜色主题：atom one dark</li><li>文件夹图标：VSCode Great Icons</li><li>在浏览器中打开网页：open in browser、Live Sever</li><li>自动重命名标签：auto rename tag</li><li>后面会给大家介绍更多的插件</li></ul><h3 id="_4-vscode的一些配置" tabindex="-1"><a class="header-anchor" href="#_4-vscode的一些配置" aria-hidden="true">#</a> 4，VSCODE的一些配置</h3><p>配置：</p><ul><li>Auto Save 自动保存</li><li>Font Size 修改代码字体大小</li><li>Word Wrap 代码自动换行</li><li>Tab Size 代码缩进</li><li>推荐2个空格（公司开发项目基本都是2个空格）</li></ul><p>配置步骤：</p><p><img src="'+i+'" alt="1692599196549"></p><p><img src="'+o+'" alt="1692599257316"></p><p><img src="'+l+'" alt="1692599329603"></p><p><img src="'+r+'" alt="1692599493924"></p><h2 id="第三节-搭建技术博客" tabindex="-1"><a class="header-anchor" href="#第三节-搭建技术博客" aria-hidden="true">#</a> 第三节 搭建技术博客</h2><h3 id="_1-安装git" tabindex="-1"><a class="header-anchor" href="#_1-安装git" aria-hidden="true">#</a> 1，安装git</h3><p>git 地址：https://git-scm.com/download/win</p><p>就下载标准版的64位：</p><p><img src="'+g+'" alt="1692600660785"></p><p><img src="'+d+'" alt="1697097544173"></p><p>下载好，也是傻瓜式安装，安装好后，如下：</p><p><img src="'+m+'" alt="1692600815022">、</p><h3 id="_2-安装node" tabindex="-1"><a class="header-anchor" href="#_2-安装node" aria-hidden="true">#</a> 2，安装Node</h3><p>地址：https://nodejs.org/download/release/v16.20.2/</p><p><img src="'+b+'" alt="1692601037466"></p><p>下载后，开始安装，安装步骤如下：</p><p><img src="'+h+'" alt="1692601393495"></p><p><img src="'+_+'" alt="1692601417418"></p><p><img src="'+u+'" alt="1692601469169"></p><p><img src="'+f+'" alt="1692601507254"></p><p><img src="'+v+'" alt="1692601532146"></p><p><img src="'+w+'" alt="1692601548666"></p><p><img src="'+k+'" alt="1692601591970"></p><p>证明电脑是已经安装好Node了，按win+R键盘，输入cmd，如下：</p><p><img src="'+x+'" alt="1692601114628"></p><p><img src="'+S+'" alt="1692601155954"></p><h3 id="_3-注册github账号" tabindex="-1"><a class="header-anchor" href="#_3-注册github账号" aria-hidden="true">#</a> 3，注册github账号</h3><p>地址：https://github.com/</p><p><img src="'+T+'" alt="1692601816629"></p><p>你需要知道你的</p><ul><li>github的账号</li><li>绑定的邮箱</li><li>密码</li></ul><h3 id="_4-创建一个博客项目" tabindex="-1"><a class="header-anchor" href="#_4-创建一个博客项目" aria-hidden="true">#</a> 4，创建一个博客项目</h3><p>地址：https://vuepress-theme-reco.recoluan.com/</p><p><img src="'+y+'" alt="1692602669055"></p><p><img src="'+C+'" alt="1692602774383"></p><p>第一步，安装工具：</p><p><img src="'+H+`" alt="1692602839547"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @vuepress-reco/theme-cli@1.0.7 <span class="token parameter variable">-g</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第二步，创建博客：</p><p><img src="`+q+'" alt="1697097784094"></p><p>开始按回车，如下：</p><p><img src="'+W+'" alt="1692603947933"></p><p>创建完后，进入到项目中，安装项目所需要的依赖，如下：</p><p><img src="'+L+`" alt="1692604371730"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> wcblog
<span class="token function">npm</span> i 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>等待依赖安装完毕。尝试把博客运行起来，如下：</p><p><img src="`+M+'" alt="1692605041177"></p><p>浏览器中测试之，如下：</p><p><img src="'+E+'" alt="1692605212491"></p><p>需要做一些配置，使用vscode打开wcblog，如下：</p><p><img src="'+z+'" alt="1692606014899"></p><p><img src="'+N+'" alt="1692610454422"></p><p>输入一个命令，把博客进行打包，如下：</p><p><img src="'+j+'" alt="1692606610840"></p><p>打完包，后会多一个dist文件夹，如下：</p><p><img src="'+A+'" alt="1692606862748"></p><p>dist中的代码就是我们要部署的代码。</p><h3 id="_5-创建远程仓库" tabindex="-1"><a class="header-anchor" href="#_5-创建远程仓库" aria-hidden="true">#</a> 5，创建远程仓库</h3><p>创建一个远程仓库，如下：</p><p><img src="'+O+'" alt="1692604483064"></p><p><img src="'+D+'" alt="1692606924627"></p><p><img src="'+V+'" alt="1692606938226"></p><p><img src="'+P+'" alt="1692606964556"></p><p>出现上面的界面，远程仓库就OK了。远程仓库创建完毕后，有两个地址，一个是http打头的，一个是ssh打头，使用ssh打头的，如下：</p><p><img src="'+F+`" alt="1692608861255"></p><h3 id="_6-配置ssh" tabindex="-1"><a class="header-anchor" href="#_6-配置ssh" aria-hidden="true">#</a> 6，配置SSH</h3><p>生成新的秘钥，如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&quot;717628672@qq.com&quot;</span>    <span class="token comment">#邮箱换成你的邮箱</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>1</p><p><img src="`+U+'" alt="1692609000727"></p><p>秘钥的生成位置，如下：</p><p><img src="'+K+'" alt="1692609036577"></p><p>把公钥copy到github上，找到公钥，如下 ：</p><p><img src="'+B+'" alt="1692609097726"></p><p><img src="'+R+'" alt="1692609126715"></p><p><img src="'+Z+'" alt="1692609176225"></p><p><img src="'+G+'" alt="1692609206096"></p><p><img src="'+I+'" alt="1692609236508"></p><h3 id="_7-初始化本地仓库-关联远程仓库" tabindex="-1"><a class="header-anchor" href="#_7-初始化本地仓库-关联远程仓库" aria-hidden="true">#</a> 7，初始化本地仓库，关联远程仓库</h3><p>打包后的源码：</p><p><img src="'+J+'" alt="1692610601785"></p><p>把博客项目初始化成本地仓库，如下：</p><p><img src="'+X+`" alt="1692610691316"></p><p>给git配置用户名和邮箱，如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name  wangcai  【和你注册github时的账号一样】
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email xxx@qq.com    【和你注册github时的邮箱一样】
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2</p><p><img src="`+Y+'" alt="1692610709734"></p><p><img src="'+Q+'" alt="1692610734381"></p><p>先进行本地仓库管理：</p><p><img src="'+$+'" alt="1692610753790"></p><p><img src="'+ss+'" alt="1692610771423"></p><p>然后让本地仓库与远程仓库进行关联，如下：</p><p><img src="'+as+'" alt="1692610807312"></p><p>把本地仓库的代码推送到远程仓库，如下：</p><p><img src="'+ts+'" alt="1692610836155"></p><p>查看远程仓库，如下：</p><p><img src="'+ps+'" alt="1692610859310"></p><h3 id="_8-开始部署" tabindex="-1"><a class="header-anchor" href="#_8-开始部署" aria-hidden="true">#</a> 8，开始部署</h3><p>流程如下：</p><p><img src="'+ns+'" alt="1692609528485"></p><p><img src="'+es+'" alt="1692609577931"></p><p>访问之，如下：</p><p><img src="'+cs+'" alt="1692611016919"></p><h2 id="第四节-第一个网页" tabindex="-1"><a class="header-anchor" href="#第四节-第一个网页" aria-hidden="true">#</a> 第四节 第一个网页</h2><h3 id="_1-什么是网页" tabindex="-1"><a class="header-anchor" href="#_1-什么是网页" aria-hidden="true">#</a> 1，什么是网页</h3><p>一个网站是有N个网页组成的，网页叫Web Page。使用浏览器看到的都是一张张的页面。页面中包含：包括文字、链接、图片、音乐、视频等。如下：</p><p><img src="'+is+'" alt="1692586778931"></p><p><img src="'+os+'" alt="1692586791762"></p><p>移动端网页：</p><p><img src="'+ls+'" alt="1692586815673"></p><p>看一下世界第一个网页：http://info.cern.ch/hypertext/WWW/TheProject.html</p><p><img src="'+rs+'" alt="1692586887288"></p><p>构建一个网页，需要三门技术：</p><ul><li>HTML 是给网页提供结构（内容）</li><li>CSS 是给网页提供样式（颜色，大小，布局）</li><li>JS 是给网页提供交互</li></ul><p><img src="'+gs+'" alt="1692586910823"></p><h3 id="_2-什么是html" tabindex="-1"><a class="header-anchor" href="#_2-什么是html" aria-hidden="true">#</a> 2，什么是HTML</h3><p><strong>超文本标记语言</strong>（英语：<strong>H</strong>yper<strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage，简称：<strong>HTML</strong>）。是一种用于创建网页的标准标记语言。</p><p><strong>什么是标记语言（markup language ）</strong></p><ul><li>由无数个标记（标签、tag)组成</li><li>比如使用h2标记的文本会被识别为“标题”进行加粗、文字放大显示</li><li>不同的标签，浏览器会作不同的处理</li></ul><p><strong>什么是超文本（ HyperText ）</strong></p><ul><li>表示不仅仅可以插入普通的文本（Text），还可以插入图片、音频、视频等内容</li><li>还可以表示超链接（HyperLink），从一个网页跳转到另一个网页</li></ul><p>尝试写第一个网页，创建一个文件夹，如下：</p><p><img src="'+ds+'" alt="1692587406035"></p><p>把code文件夹拖拽到vscode软件上，就意味着使用vscode软件打开发code文件夹，如下：</p><p><img src="'+ms+'" alt="1692587485528"></p><p>创建一个网页，后缀通常都是.html，如下：</p><p><img src="'+bs+'" alt="1692587603552"></p><p>开始书写第一个网页，如下：</p><p><img src="'+hs+`" alt="1692587990336"></p><p>参考代码：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 文档声明：告诉浏览器，你按HTML5标准来解析此网页 --&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- html是网页的根标签 --&gt;</span>
<span class="token comment">&lt;!-- lang=&quot;zh-CN&quot; lang是语言的意思   zh-CN表示HTML网页的语言是中文   en表示英文 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zh-CN<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 在head中可以对网页进行设置 --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 设置网站的标题 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>我是第1个网页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 设置网站的编码 --&gt;</span>
    <span class="token comment">&lt;!-- utf-8 基本上涵盖了世界上所有的文字，如果不写，在有的浏览器中可能会乱码 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 表示网页的主体内容 --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>我是一个孤独的H1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，需要让浏览器去解析代码，需要把页面的路径，copy到浏览器中，如下：</p><p><img src="`+_s+'" alt="1692588103254"></p><p>浏览器中测试之，如下：</p><p><img src="'+us+'" alt="1692588247860"></p><h2 id="第五节-补充" tabindex="-1"><a class="header-anchor" href="#第五节-补充" aria-hidden="true">#</a> 第五节 补充</h2><h3 id="_1-字符实体" tabindex="-1"><a class="header-anchor" href="#_1-字符实体" aria-hidden="true">#</a> 1，字符实体</h3><p>如果在html代码中同时并列出现多个空格、换行、缩进等，最终浏览器只会解析出一个空格</p><p><strong>场景</strong>:场景：在网页中展示特殊符号效果时，需要使用字符实体替代</p><p><img src="'+fs+'" alt="1692756789441"></p><p>直接上代码：</p><p><img src="'+vs+'" alt="1692756934023"></p><h3 id="_2-emmet写法" tabindex="-1"><a class="header-anchor" href="#_2-emmet写法" aria-hidden="true">#</a> 2，Emmet写法</h3><p>Emmet (前身为 Zen Coding) 是一个能大幅度提高前端开发效率的一个工具</p><p>常用的快捷键：</p><p><img src="'+ws+'" alt="1692756982400"></p><p>直接上代码：</p><p><img src="'+ks+'" alt="1692757155683"></p><h2 id="第六节-写博客并部署" tabindex="-1"><a class="header-anchor" href="#第六节-写博客并部署" aria-hidden="true">#</a> 第六节 写博客并部署</h2><h3 id="_1-分析博客源码" tabindex="-1"><a class="header-anchor" href="#_1-分析博客源码" aria-hidden="true">#</a> 1，分析博客源码</h3><p>昨天创建了博客，博客源码如下：</p><p><img src="'+xs+'" alt="1697033109988"></p><p>源码不要搞丢了，后面讲完git，你可以把源码托管到github上。使用vscode打开源码，如下：</p><p><img src="'+Ss+'" alt="1692694814607"></p><p>先把博客在本地运行起来，如下：</p><p><img src="'+Ts+'" alt="1692694893007"></p><p>使用浏览器访问之，如下：</p><p><img src="'+ys+'" alt="1692695207451"></p><p>开始写博客，如下：</p><p><img src="'+Cs+'" alt="1692695407516"></p><p>开始写笔记，如下：</p><p><img src="'+Hs+'" alt="1692695500971"></p><p>不要忘记保存。特别需要注意图片的路径，如下：</p><p><img src="'+qs+'" alt="1692695756158"></p><p><img src="https://yujingbo1023.github.io/javablog/public/assets/img/1692695792341.ace0f841.png" alt="1692695792341"></p><p>重新运行项目，如下：</p><p><img src="'+Ws+'" alt="1692695828735"></p><p>浏览器测试之，如下：</p><p><img src="https://yujingbo1023.github.io/javablog/public/assets/img/1692695888317.ff126e2e.png" alt="1692695888317"></p><h3 id="_2-部署上线" tabindex="-1"><a class="header-anchor" href="#_2-部署上线" aria-hidden="true">#</a> 2，部署上线</h3><p>你要想让别人看到你的博客，需要部署上线，部署之前，需要打包，如下：</p><p><img src="'+Ls+'" alt="1692696012289"></p><p>打包后，会把打包后的网页放到dist目录下面，如下：</p><p><img src="'+Ms+'" alt="1692696125185"></p><p>你专门找一个文件夹存放打包后的代码，如下：</p><p><img src="'+Es+'" alt="1692696275287"></p><p>创建一个远程仓库如下：</p><p><img src="'+zs+'" alt="1692696369885"></p><p><img src="'+Ns+'" alt="1692696380938"></p><p>创建完仓库后，有一个地址，如下：</p><p><img src="'+js+'" alt="1692696433026"></p><p>初始化本地仓库，如下：</p><p><img src="'+As+'" alt="1692696473394"></p><p>进行本地仓库的管理，如下：</p><p><img src="'+Os+'" alt="1692696500012"></p><p><img src="'+Ds+'" alt="1692696530849"></p><p>本地仓库与远程仓库进行关联，如下：</p><p><img src="'+Vs+'" alt="1692696574899"></p><p>推送代码到服务器，如下：</p><p><img src="'+Ps+'" alt="1692696616372"></p><p>查看远程仓库。如下：</p><p><img src="'+Fs+'" alt="1692696636579"></p><p>开始部署，如下：</p><p><img src="'+Us+'" alt="1692696680113"></p><p>等2分钟，就可以把博客部署OK了，如下：</p><p><img src="'+Ks+'" alt="1692696743393"></p><p><img src="'+Bs+'" alt="1692696777443"></p><h3 id="_3-又开始写博客" tabindex="-1"><a class="header-anchor" href="#_3-又开始写博客" aria-hidden="true">#</a> 3，又开始写博客</h3><p>开始写css总结，如下：</p><p><img src="'+Rs+'" alt="1692696858391"></p><p>打包，如下：</p><p><img src="'+Zs+'" alt="1692696896228"></p><p>就生成新的网页了，用新的网页覆盖掉旧的网页，如下:</p><p><img src="'+Gs+'" alt="1692697004794"></p><p>现在只需要推到远程仓库就OK了。</p><p><img src="'+Is+'" alt="1692697040406"></p><p><img src="'+Js+'" alt="1692697066685"></p><p><img src="'+Xs+'" alt="1692697098263"></p><p>查看远程仓库如下：</p><p><img src="'+Ys+'" alt="1692697126813"></p><p>推上去，不用管了，会重新部署。如下：</p><p><img src="'+Qs+'" alt="1692697190517"></p>',255),aa=[sa];function ta(pa,na){return a(),t("div",null,aa)}const ca=s($s,[["render",ta],["__file","01-htmlxuexi.html.vue"]]);export{ca as default};
