import{_ as n,o as s,c as a,a as p}from"./app-827e15de.js";const t="/wcblog/assets/1701940463670.9bef6117-a9f5d129.png",e="/wcblog/assets/1704242517839-a33fd3eb.png",o="/wcblog/assets/1704243108383-5011e7e3.png",c="/wcblog/assets/1704243734817-4211bae8.png",l="/wcblog/assets/1704251726404-10989a1a.png",i="/wcblog/assets/1704252012772-091f577f.png",u="/wcblog/assets/1704252390051-7461d482.png",k="/wcblog/assets/1704252581515-8743ac30.png",d="/wcblog/assets/1704252669633-1dce2015.png",r="/wcblog/assets/1704252869626-bf0bc557.png",m="/wcblog/assets/1704253041800-2fdd375a.png",v="/wcblog/assets/1704253170697-67e9d701.png",b="/wcblog/assets/1704253327295-8b3e72c2.png",g="/wcblog/assets/1704253426695-506e337b.png",y="/wcblog/assets/1704273804327-5bcb2c67.png",w="/wcblog/assets/1701941435114.4d828c54-511d2c1b.png",E="/wcblog/assets/1704280013877-cb2995dc.png",_="/wcblog/assets/1704280404125-1a866a8a.png",T="/wcblog/assets/1704281640639-a8363c37.png",R="/wcblog/assets/1701942193109.c3de8f93-6f0fb83c.png",q="/wcblog/assets/1704282438466-e4f2f98a.png",h="/wcblog/assets/1704283118214-46206991.png",N="/wcblog/assets/1701942302468.6fb06f09-15bfd849.png",L="/wcblog/assets/1704283775498-b887542f.png",A="/wcblog/assets/1704284056442-9e48add6.png",I="/wcblog/assets/1701942414480.683761ee-0527ce0f.png",O="/wcblog/assets/1701942429318.e7e01434-939211c3.png",S="/wcblog/assets/1704284463677-6cdb8166.png",C="/wcblog/assets/1704284512957-4f27d83e.png",f="/wcblog/assets/1701942522420.71a0418d-fc173539.png",x="/wcblog/assets/1701942545726.89a96062-6ed00962.png",U="/wcblog/assets/1701942663097.275ee844-f98428ab.png",F="/wcblog/assets/1704287926461-c1fe6d02.png",B="/wcblog/assets/1704288038786-fb9162fd.png",M="/wcblog/assets/1704288187402-ca39bf04.png",D="/wcblog/assets/1701943054088.049d1e05-927a4bb6.png",j="/wcblog/assets/1704288860546-8f93d8ad.png",Y="/wcblog/assets/1704288986910-eb1501d5.png",H="/wcblog/assets/1704289139906-9b0851ce.png",P="/wcblog/assets/1704289313765-b3ab4785.png",V="/wcblog/assets/1701943255272.d4eb8f43-d44e51a7.png",K="/wcblog/assets/1704289733634-d8531f7f.png",G="/wcblog/assets/1704289841062-94504385.png",W="/wcblog/assets/1704290045856-235edd50.png",J="/wcblog/assets/1704290676447-5708b9ea.png",X="/wcblog/assets/1704290815234-da296c24.png",Q="/wcblog/assets/1704290903770-923eaee7.png",z="/wcblog/assets/1704291440478-ac651499.png",Z="/wcblog/assets/1704291857690-0c3e927f.png",$="/wcblog/assets/1704183414397.35b949e6-74e866db.png",nn="/wcblog/assets/1704330595947-725af307.png",sn="/wcblog/assets/1704337923969-74f6276b.png",an="/wcblog/assets/1704338633866-4829d2fb.png",pn="/wcblog/assets/1704339118273-ad544067.png",tn="/wcblog/assets/1704339514604-409f330d.png",en="/wcblog/assets/1704340027689-70922f1f.png",on="/wcblog/assets/1704293620153-93fe2d4e.png",cn="/wcblog/assets/1704293744334-726b5412.png",ln="/wcblog/assets/1704293840146-c77f605a.png",un="/wcblog/assets/1704293906312-80999932.png",kn="/wcblog/assets/1704294005999-3e521d9c.png",dn="/wcblog/assets/1704360143461-06fce87c.png",rn="/wcblog/assets/1704360227441-7f455ac2.png",mn="/wcblog/assets/1704360317842-cdf0000f.png",vn="/wcblog/assets/1704360548058-1f38ff13.png",bn="/wcblog/assets/1704360781011-95beaf7b.png",gn="/wcblog/assets/1704361154045-bb12d083.png",yn="/wcblog/assets/1704361612256-434563da.png",wn="/wcblog/assets/1704361728431-43b7aefa.png",En="/wcblog/assets/1704361811760-3dd12923.png",_n="/wcblog/assets/1704366412446-36d420ee.png",Tn="/wcblog/assets/1704366891385-76195a4e.png",Rn="/wcblog/assets/1701943853992.c885af9b-a7db24d4.png",qn="/wcblog/assets/1704327800013-ba813bb8.png",hn="/wcblog/assets/1704327840825-00d4bd3e.png",Nn="/wcblog/assets/1704328480317-8a102ffb.png",Ln="/wcblog/assets/1704328840686-2fb22f1f.png",An="/wcblog/assets/1704329138823-9a1c2eff.png",In="/wcblog/assets/1704329207502-18390c31.png",On="/wcblog/assets/1704329378110-8ae03308.png",Sn="/wcblog/assets/1704329533926-436e0858.png",Cn={},fn=p('<h1 id="mysql下" tabindex="-1"><a class="header-anchor" href="#mysql下" aria-hidden="true">#</a> MySQL下</h1><h2 id="一-约束" tabindex="-1"><a class="header-anchor" href="#一-约束" aria-hidden="true">#</a> 一，约束</h2><h3 id="_1-什么是约束" tabindex="-1"><a class="header-anchor" href="#_1-什么是约束" aria-hidden="true">#</a> 1，什么是约束</h3><p>如下表：</p><p><img src="'+t+`" alt="1701940463670"></p><p>上面表存在一些问题：</p><ul><li>id列一般是用来标识数据的唯一性的，而上述表中id为1的有三条数据，并且<code>马花疼</code>没有id进行标识</li><li><code>柳白</code>这条数据age列的数据是3000，而人也不可能活到3000岁</li><li><code>马运</code>这条数据的math数学成绩是-5，而数学学得再不好也不可能出现负分</li><li><code>柳青</code>这条数据的english列（英文成绩）值为null，而成绩即使没考也得是0分</li></ul><p>针对上面的遇到的问题，从数据库层面在添加数据的时候进行限制，这个就是约束。约束是作用于表中列上的规则，用于限制加入表的数据。例如：我们可以给id列加约束，让其值不能重复，不能为null值。</p><p>约束的存在保证了数据库中数据的正确性、有效性和完整性。添加约束可以在添加数据的时候就限制不正确的数据，年龄是3000，数学成绩是-5分这样无效的数据，继而保障数据的完整性。</p><h3 id="_2-分类" tabindex="-1"><a class="header-anchor" href="#_2-分类" aria-hidden="true">#</a> 2，分类</h3><p>非空约束： 关键字是 NOT NULL</p><ul><li>保证列中所有的数据不能有<code>NULL</code>值。</li><li>例如：id列在添加 <code>马花疼</code> 这条数据时就不能添加成功。</li></ul><p>唯一约束：关键字是 UNIQUE</p><ul><li>保证列中所有数据各不相同。</li><li>例如：id列中三条数据的值都是1，这样的数据在添加时是绝对不允许的。</li></ul><p>主键约束：关键字是PRIMARY KEY</p><ul><li>主键是一行数据的唯一标识，要求非空且唯一。一般都会给每张表添加一个主键列用来唯一标识数据。</li><li>例如：上图表中id就可以作为主键，来标识每条数据。那么这就要求数据中的id值不能重复，不能为null值。</li></ul><p>检查约束：关键字是CHECK</p><ul><li>保证列中的值满足某一条件</li><li>例如：我们可以给age列添加一个范围，最低年龄可以设置为1，最大年龄就可以设置为300，这样的数据才更合理些。</li><li>MySQL不支持检查约束。从数据库层面不能保证，以后可以在java代码中进行限制，一样也可以实现要求。</li></ul><p>默认约束：关键字是DEFAULT</p><ul><li>保存数据时，未指定的值采用默认值。</li><li>例如：我们在给english列添加该约束，指定默认值是0，这样在添加数据时没有指定具体值时就会采用默认给定的0。</li></ul><p>外键约束：关键字是FOREIGN KEY</p><ul><li>外键用来让两个表之间建立连接，把证数据的一致性和完整性。</li></ul><h3 id="_3-非空约束" tabindex="-1"><a class="header-anchor" href="#_3-非空约束" aria-hidden="true">#</a> 3，非空约束</h3><p>非空约束用于保证列中所有数据不能有NULL值。添加约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建表时添加非空约束</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>
    列名 数据类型 <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
		<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 创建完表后添加非空约束</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 字段名 数据类型 <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+e+`" alt="1704242517839"></p><p>删除约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 字段名 数据类型；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-唯一约束" tabindex="-1"><a class="header-anchor" href="#_4-唯一约束" aria-hidden="true">#</a> 4，唯一约束</h3><p>唯一约束用于保证列中所有数据各不相同。添加约束语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建表时添加唯一约束</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>
    列名 数据类型 <span class="token keyword">UNIQUE</span> <span class="token punctuation">[</span><span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token comment">-- AUTO_INCREMENT:当不指定值时自动增长</span>
		<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>	
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>
    列名 数据类型<span class="token punctuation">;</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token punctuation">[</span><span class="token keyword">CONSTRAINT</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>约束名称<span class="token punctuation">]</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">(</span>列名<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 建完表后添加唯一约束</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 字段名 数据类型 <span class="token keyword">UNIQUE</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+o+`" alt="1704243108383"></p><p>删除约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> 字段名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-主键约束" tabindex="-1"><a class="header-anchor" href="#_5-主键约束" aria-hidden="true">#</a> 5，主键约束</h3><p>键是一行数据的唯一标识，要求非空且唯一。一张表只能有一个主键。添加约束语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建表时添加主键约束</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>
    列名 数据类型 <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">[</span><span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>
    列名 数据类型<span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token keyword">CONSTRAINT</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>约束名称<span class="token punctuation">]</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>列名<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 建完表后添加主键约束</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>字段名<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+c+`" alt="1704243734817"></p><p>删除约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6-默认约束" tabindex="-1"><a class="header-anchor" href="#_6-默认约束" aria-hidden="true">#</a> 6，默认约束</h3><p>保存数据时，未指定值采用默认值。添加约束语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建表时添加默认约束</span>
CRETAE <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>
    列名 数据类型 <span class="token keyword">DEFAULT</span> 默认值<span class="token punctuation">,</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 建完表后添加默认约束</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ALTER</span> 列名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+l+`" alt="1704251726404"></p><p>删除约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ALTER</span> 列名 <span class="token keyword">DROP</span> <span class="token keyword">DEFAULT</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_7-约束练习" tabindex="-1"><a class="header-anchor" href="#_7-约束练习" aria-hidden="true">#</a> 7，约束练习</h3><p>需求：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 员工表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp <span class="token punctuation">(</span>
	id <span class="token keyword">INT</span><span class="token punctuation">,</span>  <span class="token comment">-- 员工id，主键且自增长</span>
    ename <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 员工姓名，非空且唯一</span>
    joindate <span class="token keyword">DATE</span><span class="token punctuation">,</span>  <span class="token comment">-- 入职日期，非空</span>
    salary <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">-- 工资，非空</span>
    bonus <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">-- 奖金，如果没有将近默认为0</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据上面要求创建这张表，并为每一列添加对应的约束。建表语句如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> EMP<span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp <span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>  <span class="token comment">-- 员工id，主键且自增长</span>
    ename <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">,</span> <span class="token comment">-- 员工姓名，非空且唯一</span>
    joindate <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token comment">-- 入职日期，非空</span>
    salary <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token comment">-- 工资，非空</span>
    bonus <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span>  <span class="token comment">-- 奖金，如果没有将近默认为0</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+i+`" alt="1704252012772"></p><p>通过上面语句可以创建带有约束的 <code>emp</code> 表，约束能否发挥作用，需要进行验证，先添加一条没有问题的数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-09&#39;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+u+`" alt="1704252390051"></p><p><strong>a)验证主键约束：非空且唯一</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-09&#39;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+k+`" alt="1704252581515"></p><p>从上面的结果可以看到，字段 <code>id</code> 不能为null。重新添加一条数据，如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-09&#39;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+d+`" alt="1704252669633"></p><p>上面结果可以看到1这个值重复了。所以主键约束是用来限制数据非空且唯一。再添加一条符合要求的数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;旺财&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-09&#39;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+r+`" alt="1704252869626"></p><p><strong>b)验证非空约束</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-09&#39;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+m+`" alt="1704253041800"></p><p>从上面结果可以看到， <code>ename</code> 字段的非空约束生效了。</p><p><strong>c)验证唯一约束</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-09&#39;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+v+`" alt="1704253170697"></p><p><strong>d)验证默认约束</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;小强&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-09&#39;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+b+`" alt="1704253327295"></p><p>默认约束只有在不给值时才会采用默认值。如果给了null，那值就是null值。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;小明&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-09&#39;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+g+`" alt="1704253426695"></p><p><strong>e)验证自动增长约束</strong></p><p>条件：auto_increment当列是数字类型并且唯一约束</p><p>重新创建 <code>emp</code> 表，并给id列添加自动增长：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp<span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>  <span class="token comment">-- 员工id，主键且自增长</span>
		ename <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">,</span>  <span class="token comment">-- 员工姓名，非空并且唯一</span>
		joindate <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token comment">-- 入职日期，非空</span>
		salary <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token comment">-- 工资，非空</span>
		bonus <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span>  <span class="token comment">-- 奖金，如果没有奖金默认为0</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+y+`" alt="1704273804327"></p><p>给emp添加数据，分别验证不给id列添加值以及给id列添加NULL值，id列的值会不会自动增长：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-09&#39;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-09&#39;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-09&#39;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-外键约束" tabindex="-1"><a class="header-anchor" href="#_8-外键约束" aria-hidden="true">#</a> 8，外键约束</h3><p>外键用来让两个表的数据之间建立链接，保证数据的一致性和完整性。</p><p>有如下的两张表，员工表和部门表：</p><p><img src="`+w+`" alt="1701941435114"></p><p>员工表中的dep_id字段和部门表的id字段关联，也就是说1号学生张三属于1号部门研发部的员工。现在要删除1号部门就会出现错误的数据(员工表中属于1号部门的数据)。而上面说的两张表的关系只是我们认为它们有关系，此时需要通过外键让这两张表产生数据库层面的关系，这样要删除部门表中的1号部门的数据将无法删除。</p><p>添加外键约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建表时添加外键约束</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>
    列名 数据类型<span class="token punctuation">,</span>
		<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
		<span class="token punctuation">[</span><span class="token keyword">CONSTRAINT</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>外键名称<span class="token punctuation">]</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>外键列名<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> 主表<span class="token punctuation">(</span>主表列名<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 建完表后添加外键约束</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> 外键名称 <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>外键字段名称<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> 主表名称<span class="token punctuation">(</span>主表列名称<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除外键约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 FOREGIN <span class="token keyword">KEY</span> 外键名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>据上述语法创建员工表和部门表，并添加上外键约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 删除表</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> emp<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> dept<span class="token punctuation">;</span>

<span class="token comment">-- 部门表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept<span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
	dep_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	addr <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 员工表 </span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp<span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
	name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	age <span class="token keyword">INT</span><span class="token punctuation">,</span>
	dep_id <span class="token keyword">INT</span><span class="token punctuation">,</span>
		
	<span class="token comment">-- 添加外键 dep_id关联dept表的id主键</span>
	<span class="token keyword">CONSTRAINT</span> fk_emp_dept <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> dept<span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+E+`" alt="1704280013877"></p><p>添加数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 添加两个部门</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> dept<span class="token punctuation">(</span>dep_name<span class="token punctuation">,</span>addr<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;研发部&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;广州&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;销售部&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;深圳&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 添加员工,dep_id 表示员工所在的部门</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> 
<span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;赵六&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;孙七&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;周八&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+_+`" alt="1704280404125"></p><p>此时删除研发部这条数据，会发现无法删除。</p><p>删除外键：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> emp <span class="token keyword">DROP</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> fk_emp_dept<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重新添加外键：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> emp <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> fk_emp_dept <span class="token keyword">FOREIGN</span> <span class="token keyword">key</span><span class="token punctuation">(</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> dept<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+T+'" alt="1704281640639"></p><h2 id="二-数据库设计" tabindex="-1"><a class="header-anchor" href="#二-数据库设计" aria-hidden="true">#</a> 二，数据库设计</h2><h3 id="_1-什么是数据库设计" tabindex="-1"><a class="header-anchor" href="#_1-什么是数据库设计" aria-hidden="true">#</a> 1，什么是数据库设计</h3><p>所谓的数据库设计，就是设计一个项目中有哪些表，以及表与表之间的关系。表关系分为：</p><ul><li>一对一</li><li>一对多</li><li>多对多</li></ul><p>一对一：</p><ul><li>如用户与省份证号是一对一。用户和用户详情是一对一。</li><li>一对一关系多用于表拆分，将一个实体中经常使用的字段放一张表，不经常使用的字段放另一张表，用于提升查询性能。</li></ul><p>一对多：</p><ul><li>如部门和员工是一对多。一个部门对应多个员工，一个员工对应一个部门。</li></ul><p>多对多：</p><ul><li>如商品和订单是多对多。一个商品对应多个订单，一个订单包含多个商品。</li></ul><h3 id="_2-一对多" tabindex="-1"><a class="header-anchor" href="#_2-一对多" aria-hidden="true">#</a> 2，一对多</h3><p>实现方式：</p><ul><li>在多的一方建立外键，指向另一方的主键</li></ul><p>以 <code>员工表</code> 和 <code>部门表</code>为例。员工表属于多的一方，而部门表属于少的一方，因此可以在员工表中添加一列（dep_id），指向于部门表的主键（id）：</p><p><img src="'+R+`" alt="1701942193109"></p><p>建表语句如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 删除表</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> tb_emp<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> tb_dept<span class="token punctuation">;</span>

<span class="token comment">-- 部门表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_dept<span class="token punctuation">(</span>
	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
	dep_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	addr <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 员工表 </span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_emp<span class="token punctuation">(</span>
	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
	name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	age <span class="token keyword">int</span><span class="token punctuation">,</span>
	dep_id <span class="token keyword">int</span><span class="token punctuation">,</span>

	<span class="token comment">-- 添加外键 dep_id,关联 dept 表的id主键</span>
	<span class="token keyword">CONSTRAINT</span> fk_emp_dept <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> tb_dept<span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+q+'" alt="1704282438466"></p><p>查看表的结构模型图：</p><p><img src="'+h+'" alt="1704283118214"></p><h3 id="_3-多对多" tabindex="-1"><a class="header-anchor" href="#_3-多对多" aria-hidden="true">#</a> 3，多对多</h3><p>实现方式：</p><ul><li>建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</li></ul><p>以 <code>订单表</code> 和 <code>商品表</code> 举例，订单表和商品表都属于多的一方，此时需要创建一个中间表，在中间表中添加订单表的外键和商品表的外键指向两张表的主键：</p><p><img src="'+N+`" alt="1701942302468"></p><p>建表语句：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 删除表</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> tb_order_goods<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> tb_order<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> tb_goods<span class="token punctuation">;</span>

<span class="token comment">-- 订单表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_order<span class="token punctuation">(</span>
	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
	payment <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	payment_type <span class="token keyword">TINYINT</span><span class="token punctuation">,</span>
	<span class="token keyword">status</span> <span class="token keyword">TINYINT</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 商品表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_goods<span class="token punctuation">(</span>
	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
	title <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	price <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 订单商品中间表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_order_goods<span class="token punctuation">(</span>
	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
	order_id <span class="token keyword">int</span><span class="token punctuation">,</span>
	goods_id <span class="token keyword">int</span><span class="token punctuation">,</span>
	count <span class="token keyword">int</span><span class="token punctuation">,</span>
	
	<span class="token comment">-- 添加两个外键</span>
	<span class="token keyword">CONSTRAINT</span> fk_order_id <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>order_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> tb_order<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token keyword">CONSTRAINT</span> fk_goods_id <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>goods_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> tb_goods<span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 建完表后，添加外键</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> tb_order_goods <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> fk_order_id <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>order_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> tb_order<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> tb_order_goods <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> fk_goods_id <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>goods_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> tb_goods<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+L+'" alt="1704283775498"></p><p>查看表结构模型图：</p><p><img src="'+A+'" alt="1704284056442"></p><h3 id="_4-一对一" tabindex="-1"><a class="header-anchor" href="#_4-一对一" aria-hidden="true">#</a> 4，一对一</h3><p>一对一关系多用于表拆分，将一个实体中经常使用的字段放一张表，不经常使用的字段放另一张表，用于提升查询性能。</p><p>实现方式：</p><ul><li>在任意一方加入外键，关联另一方主键，并且设置外键为唯一(UNIQUE)</li></ul><p>以 <code>用户表</code> 举例：</p><p><img src="'+I+'" alt="1701942414480"></p><p>真正使用过程中发现 id、photo、nickname、age、gender 字段比较常用，此时就可以将这张表查分成两张表。</p><p><img src="'+O+`" alt="1701942429318"></p><p>建表语句：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> tb_user_desc <span class="token punctuation">(</span>
	id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
	city <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	edu <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	income <span class="token keyword">INT</span><span class="token punctuation">,</span>
	<span class="token keyword">status</span> <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	des <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">create</span> <span class="token keyword">table</span> tb_user <span class="token punctuation">(</span>
	id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
	photo <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	nickname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	age <span class="token keyword">INT</span><span class="token punctuation">,</span>
	gender <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	desc_id <span class="token keyword">INT</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">,</span>
	<span class="token comment">-- 添加外键</span>
	<span class="token keyword">CONSTRAINT</span> fk_user_desc <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>desc_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> tb_user_desc<span class="token punctuation">(</span>id<span class="token punctuation">)</span>	
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+S+'" alt="1704284463677"></p><p>查看表结构模型图：</p><p><img src="'+C+'" alt="1704284512957"></p><h3 id="_5-案例" tabindex="-1"><a class="header-anchor" href="#_5-案例" aria-hidden="true">#</a> 5，案例</h3><p>根据下图设计表及表和表之间的关系：</p><p><img src="'+f+'" alt="1701942522420"></p><p>经过分析，我们分为 <code>专辑表</code> <code>曲目表</code> <code>短评表</code> <code>用户表</code> 4张表。</p><p><img src="'+x+'" alt="1701942545726"></p><p>分析：</p><p>一个专辑可以有多个曲目，一个曲目只能属于某一张专辑，所以专辑表和曲目表的关系是：一对多</p><p>一个专辑可以被多个用户评论，一个用户可以对多个专辑进行评论，所以专辑和用户表的关系是：多对多</p><p>一个用户可以发多个短评，一个短评只能是某一个人发的，所以用户表和短评表的关系是：一对多</p><p><img src="'+U+`" alt="1701942663097"></p><h2 id="三-多表查询" tabindex="-1"><a class="header-anchor" href="#三-多表查询" aria-hidden="true">#</a> 三，多表查询</h2><p>多表查询顾名思义就是从多张表中一次性的查询出我们想要的数据。</p><p>准备环境：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> emp<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> dept<span class="token punctuation">;</span>

<span class="token comment">-- 创建部门表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept<span class="token punctuation">(</span>
    did <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    dname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>		
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 创建员工表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp<span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
		name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		gender <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		salary <span class="token keyword">DOUBLE</span><span class="token punctuation">,</span>
		join_date <span class="token keyword">DATE</span><span class="token punctuation">,</span>
		dep_id <span class="token keyword">INT</span><span class="token punctuation">,</span>
		<span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> dept<span class="token punctuation">(</span>did<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 添加部门数据</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> dept<span class="token punctuation">(</span>dname<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;研发部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;市场部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;财务部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;销售部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 添加员工数据</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>name<span class="token punctuation">,</span>gender<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>join_date<span class="token punctuation">,</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>
<span class="token punctuation">(</span><span class="token string">&#39;孙悟空&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token number">7200</span><span class="token punctuation">,</span><span class="token string">&#39;2013-02-24&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;猪八戒&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token number">3600</span><span class="token punctuation">,</span><span class="token string">&#39;2010-12-02&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;唐僧&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token number">9000</span><span class="token punctuation">,</span><span class="token string">&#39;2008-08-08&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;白骨精&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">,</span><span class="token string">&#39;2015-10-07&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;蜘蛛精&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token number">4500</span><span class="token punctuation">,</span><span class="token string">&#39;2011-03-14&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;小白龙&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token number">2500</span><span class="token punctuation">,</span><span class="token string">&#39;2011-02-14&#39;</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+F+`" alt="1704287926461"></p><p>从emp和dept表中查询所有的字段数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp<span class="token punctuation">,</span>dept<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+B+`" alt="1704288038786"></p><p>从上面的结果可以看到有一些无效的数据，如 <code>孙悟空</code> 这个员工属于1号部门，但也同时关联的2、3、4号部门。所以可以通过限制员工表中的 <code>dep_id</code> 字段的值和部门表 <code>did</code> 字段的值相等来消除这些无效的数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp<span class="token punctuation">,</span>dept <span class="token keyword">WHERE</span> emp<span class="token punctuation">.</span>dep_id<span class="token operator">=</span>dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+M+'" alt="1704288187402"></p><p>上面的语句就是连接查询，那么多表查询有哪些呢？</p><ul><li><p>连接查询</p><ul><li>内连接查询 <ul><li>隐式内连接查询</li><li>显示内连接查询</li></ul></li><li>外连接查询 <ul><li>左外连接查询：相当于查询A表所有数据和交集部分数据</li><li>右外连接查询：相当于查询B表所有数据和交集部分数据</li></ul></li></ul></li><li><p>子查询</p></li></ul><p>图示：</p><p><img src="'+D+`" alt="1701943054088"></p><h3 id="_1-内连接查询" tabindex="-1"><a class="header-anchor" href="#_1-内连接查询" aria-hidden="true">#</a> 1，内连接查询</h3><p>内连接查询相当于查询A B交集数据。</p><p>内连接查询：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 隐式内连接</span>
<span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span><span class="token punctuation">,</span>表<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">WHERE</span> 条件<span class="token punctuation">;</span>

<span class="token comment">-- 显示内连接</span>
<span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token punctuation">[</span><span class="token keyword">INSERT</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>隐式内连接查询：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
    <span class="token operator">*</span>
<span class="token keyword">FROM</span>
    emp<span class="token punctuation">,</span>
		dept
<span class="token keyword">WHERE</span>
    emp<span class="token punctuation">.</span>dep_id<span class="token operator">=</span>dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+j+`" alt="1704288860546"></p><p>查询emp的name，gender；dept表的dname：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> emp<span class="token punctuation">.</span>name<span class="token punctuation">,</span>emp<span class="token punctuation">.</span>gender<span class="token punctuation">,</span>dept<span class="token punctuation">.</span>dname <span class="token keyword">FROM</span> emp<span class="token punctuation">,</span>dept <span class="token keyword">WHERE</span> emp<span class="token punctuation">.</span>dep_id<span class="token operator">=</span>dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+Y+`" alt="1704288986910"></p><p>上面语句中使用表名指定字段所属有点麻烦，sql也支持给表指别名，上述语句可以改进为：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
    t1<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
    t1<span class="token punctuation">.</span>gender<span class="token punctuation">,</span>
    t2<span class="token punctuation">.</span>dname 
<span class="token keyword">FROM</span> 
    emp t1<span class="token punctuation">,</span>
    dept t2 
<span class="token keyword">WHERE</span> 
    t1<span class="token punctuation">.</span>dep_id<span class="token operator">=</span>t2<span class="token punctuation">.</span>did<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+H+`" alt="1704289139906"></p><p><strong>显示内连接查询：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> dept <span class="token keyword">ON</span> emp<span class="token punctuation">.</span>dep_id<span class="token operator">=</span>dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>
<span class="token comment">-- 上面语句中的inner可以省略，可以书写为如下语句</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp <span class="token keyword">JOIN</span> dept <span class="token keyword">ON</span> emp<span class="token punctuation">.</span>dep_id<span class="token operator">=</span>dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+P+`" alt="1704289313765"></p><h3 id="_2-外连接查询" tabindex="-1"><a class="header-anchor" href="#_2-外连接查询" aria-hidden="true">#</a> 2，外连接查询</h3><p>外连接查询：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 左外连接查询（相当于查询A表所有数据和交集部分数据）</span>
<span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">LEFT</span> <span class="token punctuation">[</span><span class="token keyword">OUTER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件<span class="token punctuation">;</span>

<span class="token comment">-- 右外连接查询（相当于查询B表所有数据和交集部分数据）</span>
<span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">RIGHT</span> <span class="token punctuation">[</span><span class="token keyword">OUTER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图示：</p><p><img src="`+V+`" alt="1701943255272"></p><p>查询emp表所有数据和对应的部门信息（左外连接）：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> dept <span class="token keyword">ON</span> emp<span class="token punctuation">.</span>dep_id<span class="token operator">=</span>dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+K+`" alt="1704289733634"></p><p>结果显示查询到了左表（emp）中所有的数据及两张表能关联的数据。</p><p>查询dept表所有数据和对应的员工信息（右外连接）：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> dept <span class="token keyword">ON</span> emp<span class="token punctuation">.</span>dep_id<span class="token operator">=</span>dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+G+`" alt="1704289841062"></p><p>结果显示查询到了右表（dept）中所有的数据及两张表能关联的数据。</p><p>要查询出dept表中所有的数据和对应的员工信息（左外连接）：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> dept <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> emp <span class="token keyword">ON</span> dept<span class="token punctuation">.</span>did<span class="token operator">=</span>emp<span class="token punctuation">.</span>dep_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+W+`" alt="1704290045856"></p><h3 id="_3-子查询" tabindex="-1"><a class="header-anchor" href="#_3-子查询" aria-hidden="true">#</a> 3，子查询</h3><p>查询中嵌套查询，称嵌套查询为子查询。</p><p>如：查询工资高于猪八戒的员工信息。</p><p>实现这个需求，可以通过两步实现，第一步：先查询出来 猪八戒的工资：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> salary <span class="token keyword">FROM</span> emp <span class="token keyword">WHERE</span> name<span class="token operator">=</span><span class="token string">&#39;猪八戒&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+J+`" alt="1704290676447"></p><p>第二步：查询工资高于猪八戒的员工信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp <span class="token keyword">WHERE</span> salary<span class="token operator">&gt;</span><span class="token number">3600</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+X+`" alt="1704290815234"></p><p>第二步中的3600可以通过第一步的sql查询出来，所以将3600用第一步的sql语句进行替换：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp <span class="token keyword">WHERE</span> salary<span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> salary <span class="token keyword">FROM</span> emp <span class="token keyword">WHERE</span> name<span class="token operator">=</span><span class="token string">&#39;猪八戒&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+Q+`" alt="1704290903770"></p><p>这就是查询语句中嵌套查询语句，子查询根据查询结果不同，作用不同：</p><ul><li><p>子查询语句结果是单行单列，子查询语句作为条件值，使用 = != &gt; &lt; 等进行条件判断</p></li><li><p>子查询语句结果是多行单列，子查询语句作为条件值，使用IN等关键字进行条件判断</p></li><li><p>子查询语句结果是多行多列，子查询语句作为虚拟表</p></li></ul><p>查询 &#39;财务部&#39; 和 &#39;市场部&#39; 所有的员工信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询 &#39;财务部&#39; 或者 &#39;市场部&#39; 所有的员工的部门did</span>
<span class="token comment">-- 结果是多行单列，使用IN关键字</span>
<span class="token keyword">SELECT</span> did <span class="token keyword">FROM</span> dept <span class="token keyword">WHERE</span> dname<span class="token operator">=</span><span class="token string">&#39;市场部&#39;</span> <span class="token operator">OR</span> dname<span class="token operator">=</span><span class="token string">&#39;财务部&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp <span class="token keyword">WHERE</span> dep_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> did <span class="token keyword">FROM</span> dept <span class="token keyword">WHERE</span> dname<span class="token operator">=</span><span class="token string">&#39;市场部&#39;</span> <span class="token operator">OR</span> dname<span class="token operator">=</span><span class="token string">&#39;财务部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+z+`" alt="1704291440478"></p><p>查询入职日期是 &#39;2011-11-11&#39; 之后的员工信息和部门信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询入职日期是 &#39;2011-11-11&#39; 之后的员工信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp <span class="token keyword">WHERE</span> join_date <span class="token operator">&gt;</span> <span class="token string">&#39;2011-11-11&#39;</span><span class="token punctuation">;</span>
<span class="token comment">-- 将上面语句的结果作为虚拟表和dept表进行内连接查询</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp <span class="token keyword">WHERE</span> join_date <span class="token operator">&gt;</span> <span class="token string">&#39;2011-11-11&#39;</span><span class="token punctuation">)</span> t1<span class="token punctuation">,</span>dept <span class="token keyword">WHERE</span> t1<span class="token punctuation">.</span>dep_id<span class="token operator">=</span>dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+Z+'" alt="1704291857690"></p><p>分析：</p><p><img src="'+$+`" alt="1704183414397"></p><h3 id="_4-案例" tabindex="-1"><a class="header-anchor" href="#_4-案例" aria-hidden="true">#</a> 4，案例</h3><p>环境准备：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> emp<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> dept<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> job<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> salarygrade<span class="token punctuation">;</span>

<span class="token comment">-- 部门表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept <span class="token punctuation">(</span>
  did <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span> <span class="token comment">-- 部门id</span>
  dname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 部门名称</span>
  loc <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token comment">-- 部门所在地</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 职务表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> job <span class="token punctuation">(</span>
  id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>  <span class="token comment">-- 职务名称</span>
  jname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">-- 职务描述</span>
  description <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">-- 工资等级表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> salarygrade <span class="token punctuation">(</span>
  grade <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>   <span class="token comment">-- 级别</span>
  losalary <span class="token keyword">INT</span><span class="token punctuation">,</span>  <span class="token comment">-- 最低工资</span>
  hisalary <span class="token keyword">INT</span> <span class="token comment">-- 最高工资</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 员工表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp <span class="token punctuation">(</span>
  id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span> <span class="token comment">-- 员工id</span>
  ename <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 员工姓名</span>
  job_id <span class="token keyword">INT</span><span class="token punctuation">,</span> <span class="token comment">-- 职务id</span>
  mgr <span class="token keyword">INT</span> <span class="token punctuation">,</span> <span class="token comment">-- 上级领导</span>
  joindate <span class="token keyword">DATE</span><span class="token punctuation">,</span> <span class="token comment">-- 入职日期</span>
  salary <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 工资</span>
  bonus <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 奖金</span>
  dept_id <span class="token keyword">INT</span> <span class="token comment">-- 所在部门编号</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 添加外键约束</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> emp <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> emp_jobid_ref_job_id_fk <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>job_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> job<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> emp <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> emp_deptid_ref_dept_id_fk <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>dept_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> dept<span class="token punctuation">(</span>did<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 添加4个部门</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> dept<span class="token punctuation">(</span>did<span class="token punctuation">,</span>dname<span class="token punctuation">,</span>loc<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> 
<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">&#39;教研部&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;北京&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&#39;学工部&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;上海&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">&#39;销售部&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;广州&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token string">&#39;财务部&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;深圳&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 添加4个职务</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> job <span class="token punctuation">(</span>id<span class="token punctuation">,</span> jname<span class="token punctuation">,</span> description<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;董事长&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;管理整个公司，接单&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;经理&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;管理部门员工&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;销售员&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;向客人推销产品&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;文员&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;使用办公软件&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 添加员工</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>mgr<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">,</span>dept_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> 
<span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span><span class="token string">&#39;孙悟空&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">&#39;2000-12-17&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;8000.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1002</span><span class="token punctuation">,</span><span class="token string">&#39;卢俊义&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;2001-02-20&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;16000.00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;3000.00&#39;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1003</span><span class="token punctuation">,</span><span class="token string">&#39;林冲&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;2001-02-22&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;12500.00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;5000.00&#39;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">&#39;唐僧&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1009</span><span class="token punctuation">,</span><span class="token string">&#39;2001-04-02&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;29750.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1005</span><span class="token punctuation">,</span><span class="token string">&#39;李逵&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;2001-09-28&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;12500.00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;14000.00&#39;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;宋江&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1009</span><span class="token punctuation">,</span><span class="token string">&#39;2001-05-01&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;28500.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1007</span><span class="token punctuation">,</span><span class="token string">&#39;刘备&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1009</span><span class="token punctuation">,</span><span class="token string">&#39;2001-09-01&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;24500.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1008</span><span class="token punctuation">,</span><span class="token string">&#39;猪八戒&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">&#39;2007-04-19&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;30000.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1009</span><span class="token punctuation">,</span><span class="token string">&#39;罗贯中&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">&#39;2001-11-17&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;50000.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1010</span><span class="token punctuation">,</span><span class="token string">&#39;吴用&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;2001-09-08&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;15000.00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;0.00&#39;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1011</span><span class="token punctuation">,</span><span class="token string">&#39;沙僧&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">&#39;2007-05-23&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;11000.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1012</span><span class="token punctuation">,</span><span class="token string">&#39;李逵&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;2001-12-03&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;9500.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1013</span><span class="token punctuation">,</span><span class="token string">&#39;小白龙&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">&#39;2001-12-03&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;30000.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1014</span><span class="token punctuation">,</span><span class="token string">&#39;关羽&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1007</span><span class="token punctuation">,</span><span class="token string">&#39;2002-01-23&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;13000.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 添加5个工资等级</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> salarygrade<span class="token punctuation">(</span>grade<span class="token punctuation">,</span>losalary<span class="token punctuation">,</span>hisalary<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> 
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7000</span><span class="token punctuation">,</span><span class="token number">12000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">12010</span><span class="token punctuation">,</span><span class="token number">14000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">14010</span><span class="token punctuation">,</span><span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">20010</span><span class="token punctuation">,</span><span class="token number">30000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">30010</span><span class="token punctuation">,</span><span class="token number">99990</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+nn+`" alt="1704330595947"></p><p>查询所有员工信息。查询员工编号，员工姓名，工资，职务名称，职务描述：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*
	分析：
		1. 员工编号，员工姓名，工资 信息在emp 员工表中
		2. 职务名称，职务描述 信息在 job 职务表中
		3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id
*/</span>
<span class="token comment">-- 方式一 ：隐式内连接</span>
<span class="token keyword">SELECT</span>
	emp<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
	emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>
	emp<span class="token punctuation">.</span>salary<span class="token punctuation">,</span>
	job<span class="token punctuation">.</span>jname<span class="token punctuation">,</span>
	job<span class="token punctuation">.</span>description
<span class="token keyword">FROM</span>
	emp<span class="token punctuation">,</span>
	job
<span class="token keyword">WHERE</span>
	emp<span class="token punctuation">.</span>job_id <span class="token operator">=</span> job<span class="token punctuation">.</span>id<span class="token punctuation">;</span>

<span class="token comment">-- 方式二 ：显式内连接</span>
<span class="token keyword">SELECT</span>
	emp<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
	emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>
	emp<span class="token punctuation">.</span>salary<span class="token punctuation">,</span>
	job<span class="token punctuation">.</span>jname<span class="token punctuation">,</span>
	job<span class="token punctuation">.</span>description
<span class="token keyword">FROM</span>
	emp
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> job <span class="token keyword">ON</span> emp<span class="token punctuation">.</span>job_id <span class="token operator">=</span> job<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+sn+`" alt="1704337923969"></p><p>查询员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*
	分析：
		1. 员工编号，员工姓名，工资 信息在emp 员工表中
		2. 职务名称，职务描述 信息在 job 职务表中
		3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id

		4. 部门名称，部门位置 来自于 部门表 dept
		5. dept 和 emp 一对多关系 dept.id = emp.dept_id
*/</span>

<span class="token comment">-- 方式一 ：隐式内连接</span>
<span class="token keyword">SELECT</span>
	emp<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
	emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>
	emp<span class="token punctuation">.</span>salary<span class="token punctuation">,</span>
	job<span class="token punctuation">.</span>jname<span class="token punctuation">,</span>
	job<span class="token punctuation">.</span>description<span class="token punctuation">,</span>
	dept<span class="token punctuation">.</span>dname<span class="token punctuation">,</span>
	dept<span class="token punctuation">.</span>loc
<span class="token keyword">FROM</span>
	emp<span class="token punctuation">,</span>
	job<span class="token punctuation">,</span>
	dept
<span class="token keyword">WHERE</span>
	emp<span class="token punctuation">.</span>job_id <span class="token operator">=</span> job<span class="token punctuation">.</span>id
	<span class="token operator">and</span> dept<span class="token punctuation">.</span>id <span class="token operator">=</span> emp<span class="token punctuation">.</span>dept_id<span class="token punctuation">;</span>

<span class="token comment">-- 方式二 ：显式内连接</span>
<span class="token keyword">SELECT</span>
	emp<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
	emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>
	emp<span class="token punctuation">.</span>salary<span class="token punctuation">,</span>
	job<span class="token punctuation">.</span>jname<span class="token punctuation">,</span>
	job<span class="token punctuation">.</span>description<span class="token punctuation">,</span>
	dept<span class="token punctuation">.</span>dname<span class="token punctuation">,</span>
	dept<span class="token punctuation">.</span>loc
<span class="token keyword">FROM</span>
	emp
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> job <span class="token keyword">ON</span> emp<span class="token punctuation">.</span>job_id <span class="token operator">=</span> job<span class="token punctuation">.</span>id
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> dept <span class="token keyword">ON</span> dept<span class="token punctuation">.</span>id <span class="token operator">=</span> emp<span class="token punctuation">.</span>dept_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+an+`" alt="1704338633866"></p><p>查询员工姓名，工资，工资等级：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*
	分析：
		1. 员工姓名，工资 信息在emp 员工表中
		2. 工资等级 信息在 salarygrade 工资等级表中
		3. emp.salary &gt;= salarygrade.losalary  and emp.salary &lt;= salarygrade.hisalary
*/</span>
<span class="token keyword">SELECT</span>
	emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>
	emp<span class="token punctuation">.</span>salary<span class="token punctuation">,</span>
	t<span class="token punctuation">.</span>grade
<span class="token keyword">FROM</span>
	emp<span class="token punctuation">,</span>
	salarygrade t
<span class="token keyword">WHERE</span>
	emp<span class="token punctuation">.</span>salary <span class="token operator">&gt;=</span> t<span class="token punctuation">.</span>losalary
<span class="token operator">AND</span> emp<span class="token punctuation">.</span>salary <span class="token operator">&lt;=</span> t<span class="token punctuation">.</span>hisalary

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+pn+`" alt="1704339118273"></p><p>查询员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*
	分析：
		1. 员工编号，员工姓名，工资 信息在emp 员工表中
		2. 职务名称，职务描述 信息在 job 职务表中
		3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id

		4. 部门名称，部门位置 来自于 部门表 dept
		5. dept 和 emp 一对多关系 dept.id = emp.dept_id
		6. 工资等级 信息在 salarygrade 工资等级表中
		7. emp.salary &gt;= salarygrade.losalary  and emp.salary &lt;= salarygrade.hisalary
*/</span>
<span class="token keyword">SELECT</span>
	emp<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
	emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>
	emp<span class="token punctuation">.</span>salary<span class="token punctuation">,</span>
	job<span class="token punctuation">.</span>jname<span class="token punctuation">,</span>
	job<span class="token punctuation">.</span>description<span class="token punctuation">,</span>
	dept<span class="token punctuation">.</span>dname<span class="token punctuation">,</span>
	dept<span class="token punctuation">.</span>loc<span class="token punctuation">,</span>
	t<span class="token punctuation">.</span>grade
<span class="token keyword">FROM</span>
	emp
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> job <span class="token keyword">ON</span> emp<span class="token punctuation">.</span>job_id <span class="token operator">=</span> job<span class="token punctuation">.</span>id
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> dept <span class="token keyword">ON</span> dept<span class="token punctuation">.</span>id <span class="token operator">=</span> emp<span class="token punctuation">.</span>dept_id
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> salarygrade t <span class="token keyword">ON</span> emp<span class="token punctuation">.</span>salary <span class="token operator">BETWEEN</span> t<span class="token punctuation">.</span>losalary <span class="token operator">and</span> t<span class="token punctuation">.</span>hisalary<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+tn+`" alt="1704339514604"></p><p>查询出部门编号、部门名称、部门位置、部门人数：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
    dept<span class="token punctuation">.</span>did<span class="token punctuation">,</span>dept<span class="token punctuation">.</span>dname<span class="token punctuation">,</span>dept<span class="token punctuation">.</span>loc<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> 
    emp
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span>
    dept
<span class="token keyword">WHERE</span>
    emp<span class="token punctuation">.</span>dept_id<span class="token operator">=</span>dept<span class="token punctuation">.</span>did
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+en+`" alt="1704340027689"></p><h2 id="四-案例" tabindex="-1"><a class="header-anchor" href="#四-案例" aria-hidden="true">#</a> 四，案例</h2><h3 id="_1-创建一些表" tabindex="-1"><a class="header-anchor" href="#_1-创建一些表" aria-hidden="true">#</a> 1，创建一些表</h3><p>创建一些表：</p><ul><li>班级表 class</li><li>学生表 student</li><li>老师表 teacher</li><li>课程表 course</li><li>成绩表 score</li></ul><p>创建班级表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> class<span class="token punctuation">(</span>
    cid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    caption <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;三年二班&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;三年三班&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;一年二班&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;二年九班&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+on+`" alt="1704293620153"></p><p>创建学生表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>
    sid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    gender <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    class_id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    sname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    <span class="token keyword">constraint</span> fk_student_class <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>class_id<span class="token punctuation">)</span> <span class="token keyword">references</span> class<span class="token punctuation">(</span>cid<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;理解&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;钢蛋&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张一&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张二&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;铁锤&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李一&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李二&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;如花&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;13&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;14&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘一&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;15&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘二&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;16&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+cn+`" alt="1704293744334"></p><p>创建老师表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> teacher<span class="token punctuation">(</span>
    tid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span> <span class="token punctuation">,</span>
    tname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>teacher<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张磊老师&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李平老师&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘海燕老师&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;朱云海老师&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李杰老师&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+ln+`" alt="1704293840146"></p><p>创建课程表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> course<span class="token punctuation">(</span>
    cid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    cname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    teacher_id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    <span class="token keyword">constraint</span> fk_course_teacher <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>teacher_id<span class="token punctuation">)</span> <span class="token keyword">references</span> teacher<span class="token punctuation">(</span>tid<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>course<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;生物&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;物理&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;体育&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;美术&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+un+'" alt="1704293906312"></p><p>创建成绩表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>score<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>sid<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>student_id<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>course_id<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>num<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token keyword">CONSTRAINT</span> <span class="token identifier"><span class="token punctuation">`</span>fk_score_course<span class="token punctuation">`</span></span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>course_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>course<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">CONSTRAINT</span> <span class="token identifier"><span class="token punctuation">`</span>fk_score_student<span class="token punctuation">`</span></span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>student_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>sid<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>score<span class="token punctuation">`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;66&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;68&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;77&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;66&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;87&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;13&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;14&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;79&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;15&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;16&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;67&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;17&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;18&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;79&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;19&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;20&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;67&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;21&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;22&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;23&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;24&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;67&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;25&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;26&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;27&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;28&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;67&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;29&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;88&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;30&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;31&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;32&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;67&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;33&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;88&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;34&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;91&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;35&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;88&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;36&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;67&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;37&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;38&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;90&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;39&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;77&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;40&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;43&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;41&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;87&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;42&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;90&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;43&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;77&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;44&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;43&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;45&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;87&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;46&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;90&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;47&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;77&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;48&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;43&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;49&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;87&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;52&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;13&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;87&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="'+kn+`" alt="1704294005999"></p><h3 id="_2-练习题" tabindex="-1"><a class="header-anchor" href="#_2-练习题" aria-hidden="true">#</a> 2，练习题</h3><ol><li>查询姓“李”的老师的个数。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> tname <span class="token operator">LIKE</span><span class="token string">&#39;李%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+dn+`" alt="1704360143461"></p><ol start="2"><li>查询姓“张”的学生名单。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> sname <span class="token operator">LIKE</span> <span class="token string">&#39;张%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+rn+`" alt="1704360227441"></p><ol start="3"><li>查询男生、女生的人数。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> gender<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> student <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> gender<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+mn+`" alt="1704360317842"></p><ol start="4"><li>查询同名同姓学生名单，并统计同名人数。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> sname<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> student <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> sname <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+vn+`" alt="1704360548058"></p><ol start="5"><li>查询 “三年二班” 的所有学生。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 内连接（隐式内连接，显示内连接） 求交集</span>
<span class="token comment">-- 左外连接，右外连接   左外连接（左表中的数据是全的）</span>
<span class="token comment">-- 子查询</span>

<span class="token comment">-- 内连接查询</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student<span class="token punctuation">,</span>class <span class="token keyword">WHERE</span> student<span class="token punctuation">.</span>class_id<span class="token operator">=</span>class<span class="token punctuation">.</span>cid <span class="token operator">AND</span> class<span class="token punctuation">.</span>caption<span class="token operator">=</span><span class="token string">&#39;三年二班&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+bn+`" alt="1704360781011"></p><ol start="6"><li>查询 每个 班级的 班级名称、班级人数。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 隐式内连接查询</span>
<span class="token keyword">SELECT</span> class<span class="token punctuation">.</span>caption<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> student<span class="token punctuation">,</span>class <span class="token keyword">WHERE</span> student<span class="token punctuation">.</span>class_id<span class="token operator">=</span>class<span class="token punctuation">.</span>cid <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> class<span class="token punctuation">.</span>caption<span class="token punctuation">;</span>

<span class="token comment">-- 左外连接查询</span>
<span class="token keyword">SELECT</span> class<span class="token punctuation">.</span>caption<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> student <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> class <span class="token keyword">ON</span> student<span class="token punctuation">.</span>class_id<span class="token operator">=</span>class<span class="token punctuation">.</span>cid <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> class<span class="token punctuation">.</span>caption<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+gn+`" alt="1704361154045"></p><ol start="7"><li>查询成绩小于60分的同学的学号、姓名、成绩、课程名称。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
    student<span class="token punctuation">.</span>sid<span class="token punctuation">,</span>student<span class="token punctuation">.</span>sname<span class="token punctuation">,</span>score<span class="token punctuation">.</span>num<span class="token punctuation">,</span>course<span class="token punctuation">.</span>cname 
<span class="token keyword">FROM</span> 
    score
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> student <span class="token keyword">ON</span> student<span class="token punctuation">.</span>sid<span class="token operator">=</span>score<span class="token punctuation">.</span>student_id
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> course <span class="token keyword">ON</span> course<span class="token punctuation">.</span>cid<span class="token operator">=</span>score<span class="token punctuation">.</span>course_id
<span class="token keyword">WHERE</span> 
    score<span class="token punctuation">.</span>num <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+yn+`" alt="1704361612256"></p><ol start="8"><li>查询选修了 “生物课” 的所有学生ID、学生姓名、成绩。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
    student<span class="token punctuation">.</span>sid<span class="token punctuation">,</span>student<span class="token punctuation">.</span>sname<span class="token punctuation">,</span>score<span class="token punctuation">.</span>num
<span class="token keyword">FROM</span> 
    score
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> student <span class="token keyword">ON</span> student<span class="token punctuation">.</span>sid<span class="token operator">=</span>score<span class="token punctuation">.</span>student_id
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> course <span class="token keyword">ON</span> course<span class="token punctuation">.</span>cid<span class="token operator">=</span>score<span class="token punctuation">.</span>course_id
<span class="token keyword">WHERE</span> 
    course<span class="token punctuation">.</span>cname<span class="token operator">=</span><span class="token string">&#39;生物&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+wn+`" alt="1704361728431"></p><ol start="9"><li>查询选修了 “生物课” 且分数低于60的的所有学生ID、学生姓名、成绩。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
    student<span class="token punctuation">.</span>sid<span class="token punctuation">,</span>student<span class="token punctuation">.</span>sname<span class="token punctuation">,</span>score<span class="token punctuation">.</span>num
<span class="token keyword">FROM</span> 
    score
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> student <span class="token keyword">ON</span> student<span class="token punctuation">.</span>sid<span class="token operator">=</span>score<span class="token punctuation">.</span>student_id
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> course <span class="token keyword">ON</span> course<span class="token punctuation">.</span>cid<span class="token operator">=</span>score<span class="token punctuation">.</span>course_id
<span class="token keyword">WHERE</span> 
    course<span class="token punctuation">.</span>cname<span class="token operator">=</span><span class="token string">&#39;生物&#39;</span> <span class="token operator">AND</span> score<span class="token punctuation">.</span>num<span class="token operator">&lt;</span><span class="token number">60</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+En+`" alt="1704361811760"></p><ol start="10"><li>查询所有同学的学号、姓名、选课数、总成绩。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
    student<span class="token punctuation">.</span>sid<span class="token punctuation">,</span>student<span class="token punctuation">.</span>sname<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
    score
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> student <span class="token keyword">ON</span> student<span class="token punctuation">.</span>sid<span class="token operator">=</span>score<span class="token punctuation">.</span>student_id
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> student_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+_n+`" alt="1704366412446"></p><ol start="11"><li>查询各科被选修的学生数。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
    course_id<span class="token punctuation">,</span>course<span class="token punctuation">.</span>cname<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 
<span class="token keyword">FROM</span> 
    score
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> 
    course <span class="token keyword">ON</span> course<span class="token punctuation">.</span>cid<span class="token operator">=</span>score<span class="token punctuation">.</span>course_id
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 
    course_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码效果如下：</p><p><img src="`+Tn+`" alt="1704366891385"></p><ol start="12"><li>查询各科成绩的总分、最高分、最低分，显示：课程ID、课程名称、总分、最高分、最低分。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="13"><li>查询各科成绩的平均分，显示：课程ID、课程名称、平均分。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="14"><li>查询各科成绩的平均分，显示：课程ID、课程名称、平均分（按平均分从大到小排序）。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="15"><li>查询各科成绩的平均分和及格率，显示：课程ID、课程名称、平均分、及格率。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="16"><li>查询平均成绩大于60的所有学生的学号、平均成绩。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="17"><li>查询平均成绩大于85的所有学生的学号、平均成绩、姓名。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="18"><li>查询 “三年二班” 每个学生的 学号、姓名、总成绩、平均成绩。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="19"><li>查询各个班级的班级名称、总成绩、平均成绩、及格率（按平均成绩从大到小排序）。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="20"><li>查询学过 “波多” 老师课的同学的学号、姓名。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="21"><li>查询没学过 “波多” 老师课的同学的学号、姓名。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="22"><li>查询选修 “苍空” 老师所授课程的学生中，成绩最高的学生姓名及其成绩（不考虑并列）。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="23"><li>查询选修 “苍空” 老师所授课程的学生中，成绩最高的学生姓名及其成绩（考虑并列）。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="24"><li>查询只选修了一门课程的全部学生的学号、姓名。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="25"><li>查询至少选修两门课程的学生学号、学生姓名、选修课程数量。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="26"><li>查询两门及以上不及格的同学的学号、学生姓名、选修课程数量。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="27"><li>查询选修了所有课程的学生的学号、姓名。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="28"><li>查询未选修所有课程的学生的学号、姓名。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="29"><li>查询所有学生都选修了的课程的课程号、课程名。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="30"><li>查询选修 “生物” 和 “物理” 课程的所有学生学号、姓名。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="31"><li>查询至少有一门课与学号为“1”的学生所选的课程相同的其他学生学号 和 姓名 。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="32"><li>查询与学号为 “2” 的同学选修的课程完全相同的其他 学生学号 和 姓名 。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="33"><li>查询“生物”课程比“物理”课程成绩高的所有学生的学号。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="34"><li>查询每门课程成绩最好的前3名 (不考虑成绩并列情况) 。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="35"><li>查询每门课程成绩最好的前3名 (考虑成绩并列情况) 。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="36"><li>创建一个表 <code>sc</code>，然后将 score 表中所有数据插入到 sc 表中。</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="37"><li>向 sc 表中插入一些记录，这些记录要求符合以下条件：</li></ol><ul><li>学生ID为：没上过课程ID为 “2” 课程的学生的 学号；</li><li>课程ID为：2</li><li>成绩为：80</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><ol start="38"><li>向 sc 表中插入一些记录，这些记录要求符合以下条件：</li></ol><ul><li>学生ID为：没上过课程ID为 “2” 课程的学生的 学号。</li><li>课程ID为：2。</li><li>成绩为：课程ID为3的最高分。</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行代码效果如下：</p><h2 id="五-事务" tabindex="-1"><a class="header-anchor" href="#五-事务" aria-hidden="true">#</a> 五，事务</h2><h3 id="_1-什么是事务" tabindex="-1"><a class="header-anchor" href="#_1-什么是事务" aria-hidden="true">#</a> 1，什么是事务</h3><p>数据库的事务（Transaction）是一种机制、一个操作序列，包含了一组数据库操作命令。事务把所有的命令作为一个整体一起向系统提交或撤销操作请求，即这一组数据库命令要么同时成功，要么同时失败。事务是一个不可分割的工作逻辑单元。</p><p>案例：张三和李四账户中各有1000块钱，现李四需要转换500块钱给张三，具体的转账操作为</p><ul><li>第一步：查询李四账户余额</li><li>第二步：从李四账户金额 -500</li><li>第三步：给张三账户金额 +500</li></ul><p>现在假设在转账过程中第二步完成后出现了异常第三步没有执行，就会造成李四账户金额少了500，而张三金额并没有多500；这样的系统是有问题的。如果解决呢？使用事务可以解决上述问题：</p><p><img src="`+Rn+'" alt="1701943853992"></p><p>从上图可以看到在转账前开启事务，如果出现了异常回滚事务，三步正常执行就提交事务，这样就可以完美解决问题。mysql存储引擎有很多，小皮软件中mysql默认的存储引擎是不支持事务，有的是支持的。切换一下存储引擎：</p><p><img src="'+qn+'" alt="1704327800013"></p><p><img src="'+hn+`" alt="1704327840825"></p><h3 id="_2-语法" tabindex="-1"><a class="header-anchor" href="#_2-语法" aria-hidden="true">#</a> 2，语法</h3><p>开启事务：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span>
或者
<span class="token keyword">BEGIN</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提交事务：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">COMMIT</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>回滚事务：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-代码验证" tabindex="-1"><a class="header-anchor" href="#_3-代码验证" aria-hidden="true">#</a> 3，代码验证</h3><p>环境准备：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> account<span class="token punctuation">;</span>

<span class="token comment">-- 创建账户表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> account<span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
		name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		money <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 添加数据</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> account<span class="token punctuation">(</span>name<span class="token punctuation">,</span>money<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+Nn+`" alt="1704328480317"></p><p>不加事务如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 转账操作</span>
<span class="token comment">-- 1. 查询李四账户金额是否大于500</span>

<span class="token comment">-- 2. 李四账户 -500</span>
<span class="token keyword">UPDATE</span> account <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">500</span> <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">;</span>

出现异常了<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token comment">-- 此处不是注释，在整体执行时会出问题，后面的sql则不执行</span>

<span class="token comment">-- 3. 张三账户 +500</span>
<span class="token keyword">UPDATE</span> account <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">500</span> <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>整体执行结果肯定会出问题，查询账户表中数据，发现李四账户少了500，而张三账户并没有多500：</p><p><img src="`+Ln+`" alt="1704328840686"></p><p>添加事务如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 转账操作</span>
<span class="token comment">-- 1. 查询李四账户金额是否大于500</span>

<span class="token comment">-- 2. 李四账户 -500</span>
<span class="token keyword">UPDATE</span> account <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">500</span> <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">;</span>

出现异常了<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token comment">-- 此处不是注释，在整体执行时会出问题，后面的sql则不执行</span>

<span class="token comment">-- 3. 张三账户 +500</span>
<span class="token keyword">UPDATE</span> account <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">500</span> <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 提交事务</span>
<span class="token keyword">COMMIT</span><span class="token punctuation">;</span>

<span class="token comment">-- 回滚事务</span>
<span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面sql中的执行成功进选择执行提交事务，而出现问题则执行回滚事务的语句。以后我们肯定不可能这样操作，而是在java中进行操作，在java中可以抓取异常，没出现异常提交事务，出现异常回滚事务。</p><p><img src="`+An+'" alt="1704329138823"></p><p><img src="'+In+`" alt="1704329207502"></p><h3 id="_4-事务的四大特征" tabindex="-1"><a class="header-anchor" href="#_4-事务的四大特征" aria-hidden="true">#</a> 4，事务的四大特征</h3><p>事务有四大特征：</p><ul><li>原子性（Atomicity）: 事务是不可分割的最小操作单位，要么同时成功，要么同时失败</li><li>一致性（Consistency） : 事务完成时，必须使所有的数据都保持一致状态</li><li>隔离性（Isolation） : 多个事务之间，操作的可见性</li><li>持久性（Durability） : 事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</li></ul><p>注意：</p><ul><li>mysql中事务是自动提交的。也就是说我们不添加事务执行sql语句，语句执行完毕会自动的提交事务。</li></ul><p>可以通过下面的语句查询默认提交方式：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> @<span class="token variable">@autocommit</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+On+`" alt="1704329378110"></p><p>查询到的<strong>结果是1 则表示自动提交，结果是0表示手动提交</strong>。</p><p>当然也可以通过下面语句修改提交方式：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> @<span class="token variable">@autocommit</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行语句效果如下：</p><p><img src="`+Sn+'" alt="1704329533926"></p>',484),xn=[fn];function Un(Fn,Bn){return s(),a("div",null,xn)}const Dn=n(Cn,[["render",Un],["__file","02-MySQLxia.html.vue"]]);export{Dn as default};
