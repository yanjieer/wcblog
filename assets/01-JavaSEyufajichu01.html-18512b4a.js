import{_ as n,o as s,c as a,a as t}from"./app-dcd50f73.js";const p="/wcblog/assets/1700553539693.0d5a9888-39218caf.png",e="/wcblog/assets/1702456642002-c314f89c.png",o="/wcblog/assets/1702426072004.e80ead1d-e39b3ef8.png",c="/wcblog/assets/1700554930304.324b523b-b044cd69.png",l="/wcblog/assets/1700558927361.16448dea-f4aea0f5.png",i="/wcblog/assets/1700558960539.a4e04ac3-6ffc3088.png",u="/wcblog/assets/1700558994112.3b63e03c-0eeafbb7.png",r="/wcblog/assets/1700559041473.7e352808-f5314539.png",d="/wcblog/assets/1702431281215.9754553e-ee7217d5.png",k="/wcblog/assets/1702431342025.9a138f2c-57d4c7c1.png",m="/wcblog/assets/1700555041461.1bd4268d-034b8dba.png",v="/wcblog/assets/1702431821122.bbfd2da1-b6037907.png",b="/wcblog/assets/1702431851966.b766e8c3-49b0500d.png",g="/wcblog/assets/1702431880532.07d9ca48-c516b021.png",h="/wcblog/assets/1702431914890.60e7e32d-6e392142.png",y="/wcblog/assets/1700555526026.f8509a84-050bfd09.png",w="/wcblog/assets/1702426522211.19938513-f22320bc.png",_="/wcblog/assets/1702426539862.2e417f65-3bdfb831.png",f="/wcblog/assets/1702426557047.3279f45b-6b4cac96.png",S="/wcblog/assets/1702426575230.8d4d922a-d23e8fdb.png",J="/wcblog/assets/1702426605707.d4cb5479-1724dc6f.png",j="/wcblog/assets/1702426627866.2f57360d-ade66170.png",x="/wcblog/assets/1702426642957.11cb0514-85d75850.png",D="/wcblog/assets/1702426652099.e4688fc9-5d240d13.png",E="/wcblog/assets/1702426662599.8c8e18c9-93ae1e5d.png",K="/wcblog/assets/1702426681768.64516b77-3d4f541e.png",q="/wcblog/assets/1702433350761.a41a4d27-a1645dc2.png",H="/wcblog/assets/1702433404611.83a4b69d-937ad80e.png",W="/wcblog/assets/1702433500516.98cde725-a6ea6d9b.png",I="/wcblog/assets/1702433545970.b9753eae-318733d9.png",A="/wcblog/assets/1702433624846.1d22256a-457bc2f1.png",Q="/wcblog/assets/1702433693492.b4759ef7-580f1eb8.png",M="/wcblog/assets/1702433763090.f998e181-7d981a17.png",P="/wcblog/assets/1702433805532.85a66e95-06364872.png",C="/wcblog/assets/1702433834413.89cb2a27-c824b300.png",L="/wcblog/assets/1702433896354.a1fe74e1-9dff489b.png",R="/wcblog/assets/1702433938511.4a033d2a-cc48c376.png",O="/wcblog/assets/1702434033453.b4297ffe-81a6730c.png",B="/wcblog/assets/1702434088847.953810bc-43078fa8.png",T="/wcblog/assets/1702434126955.3e48d4eb-1e7b6e04.png",V="/wcblog/assets/1702434147265.477ab080-224ba7d2.png",F="/wcblog/assets/1702434268246.b6dbd2d6-3b04c16c.png",N="/wcblog/assets/1702434377153.41e81827-3e17c001.png",X="/wcblog/assets/1702434431446.8d4fd80c-7f6ad930.png",G="/wcblog/assets/1700560026675.e27224b5-ce1f5bbb.png",z="/wcblog/assets/1700560037341.afd43377-994cc7b6.png",U="/wcblog/assets/1700560064717.1b520595-b70d0af0.png",Y="/wcblog/assets/1702458984319-bb3a39e4.png",$="/wcblog/assets/1702459008491-8124177f.png",Z="/wcblog/assets/1702459069365-60a98b1c.png",nn="/wcblog/assets/1702459168059-0a6dd165.png",sn="/wcblog/assets/1702459664769-c6139709.png",an="/wcblog/assets/1702460132840-9d7f4c37.png",tn="/wcblog/assets/1702460403768-56ec89d4.png",pn="/wcblog/assets/1700561889642.b6750082-c5a43914.png",en="/wcblog/assets/1700561944260.ec4d26c3-4d48e0a1.png",on="/wcblog/assets/1700562206401.a3a273f0-7b2a356e.png",cn="/wcblog/assets/1700562366084.0445b1ce-6b3a3349.png",ln="/wcblog/assets/1700562402224.34f215d0-18198b3e.png",un="/wcblog/assets/1700562724513.f6645d03-1e44a045.png",rn="/wcblog/assets/1702465788378-54edc3a0.png",dn="/wcblog/assets/1700562943292.0a281900-31647e49.png",kn="/wcblog/assets/1702466116315-f87a3b98.png",mn="/wcblog/assets/1702466368453-e916c6b5.png",vn="/wcblog/assets/1702466913278-302cae27.png",bn="/wcblog/assets/1702467118484-1c84f51f.png",gn="/wcblog/assets/1702467313105-224788d0.png",hn="/wcblog/assets/1702467409289-4162aa7b.png",yn="/wcblog/assets/1700563853540.72771688-a3e33b69.png",wn="/wcblog/assets/1702467658664-648f9b11.png",_n="/wcblog/assets/1702468416933-b6d7b134.png",fn={},Sn=t('<h1 id="_01-javase语法基础01" tabindex="-1"><a class="header-anchor" href="#_01-javase语法基础01" aria-hidden="true">#</a> 01-JavaSE语法基础01</h1><h2 id="一-java背景" tabindex="-1"><a class="header-anchor" href="#一-java背景" aria-hidden="true">#</a> 一，Java背景</h2><p>本门课程的讲解是建立在已经掌握了一门编程语言的基础上进行讲解的。默认已经会了一门编程语言，如：JS。如果你是完全零基础的小白，那就不适合本门课程。</p><h3 id="_1-java历史-了解" tabindex="-1"><a class="header-anchor" href="#_1-java历史-了解" aria-hidden="true">#</a> 1，Java历史(了解)</h3><ul><li><p><strong>Java是哪家公司的产品？</strong></p><p>Java是美国Sun（Stanford University Network，斯坦福大学网络公司）公司在1995年推出的一门计算机<strong>高级编程语言</strong>。但是在2009年是Sun公司被Oracle（甲骨文）公司给收购了，所以目前Java语言是Oracle公司所有产品。</p></li><li><p><strong>Java名称的来历？</strong></p><p>早期这门语言的名字其实不叫Java，当时称为Oak（橡树的意思），为什么叫橡树呢？原因是因为Sun公司的门口种了很多橡树，但是后来由于商标注册时，Oak商标已经其他公司注册了，所以后面改名为Java了。那么有人好奇为什么叫Java呢？Java是印度的一个岛屿，上面盛产咖啡，可能是因为他们公司的程序员喜欢喝咖啡，所以就改名为Java了。</p></li><li><p><strong>Java的创始人是谁？</strong></p><p>说完Java名称的来历之后，接下来我们聊聊Java的祖师爷是谁？ Java的联合创始人有很多，但是行业普遍认可的Java的创始人 是<strong>詹姆斯●高斯林</strong>，被称为Java之父</p></li></ul><h3 id="_2-java能做什么-了解" tabindex="-1"><a class="header-anchor" href="#_2-java能做什么-了解" aria-hidden="true">#</a> 2，Java能做什么（了解）</h3><p>其实Java能做的事情非常多，它可以做桌面应用的开发、企业互联网应用开发、移动应用开发、服务器系统开发、大数据开发、游戏开发等等。</p><ol><li>桌面应用开发：能够在电脑桌面运行的软件 举例：财务管理软件、编写程序用的IDEA开发工具等，可以用Java语言开发</li><li>企业级应用开发：大型的互联网应用程序 举例：淘宝、京东等</li><li>移动应用开发：运行的Android手机端的软件 举例：QQ客户端、抖音APP等</li><li>服务器系统：应用程序的后台（为客户端程序提供数据） 举例：服务器系统为用户推荐那你喜爱的视频</li><li>大数据开发：大数据是一个互联网开发方向 举例：目前最火的大数据开发平台是Hadoop，就是用Java语言开发的</li><li>游戏开发：游戏本质上是给用户提供娱乐的软件，有良好的交互感受 举例：我的世界MineCraft就是用Java语言开发的</li></ol><h3 id="_3-java技术体系" tabindex="-1"><a class="header-anchor" href="#_3-java技术体系" aria-hidden="true">#</a> 3，Java技术体系</h3><p>Java为了满足不同的应用场景提供了不同的技术版本，主要有三个版本。</p><ul><li>Java SE（Java Standard Edition）：叫做标准版，它是后面两个版本的基础，也就是学习后面两个版本必须先学习JavaSE。<strong>我们现阶段学习的就是这个版本中的技术，它是Java技术的核心和基础</strong>。</li><li>Java EE（Java Enterprise Edition）: 叫做企业版，它是为企业级应用开发提供的一套解决方案。<strong>在后面课程中主要学习这个版本中的技术</strong>。</li><li>Java ME（Java Micro Edition）：叫做小型版，它为开发移动设备的应用提供了一套解决方案。<strong>目前已经不被市场认可（淘汰），取而代之的是基于Android系统的应用开发</strong>。</li></ul><h2 id="二-java快速入门" tabindex="-1"><a class="header-anchor" href="#二-java快速入门" aria-hidden="true">#</a> 二，Java快速入门</h2><h3 id="_1-安装jdk" tabindex="-1"><a class="header-anchor" href="#_1-安装jdk" aria-hidden="true">#</a> 1，安装JDK</h3><p>要使用Java语言开发程序，我们得先得安装Java的开发环境，所谓的Java开发环境，实际上就是Java官方提供的一个软件，叫做JDK（全称是Java Develop Kit），翻译过来意思就是Java开发工具包。我们先要到官网上去下载JDK，然后安装在自己的电脑上，才可以在自己的电脑上使用JDK来开发Java程序。JDK的版本有很多，下图是JDK版本更新的历程图，有LTS标识的是长期支持版本（意思就是Oracle会不定期更新）。目前公司中用得最多的版本是JDK8版本。</p><p><img src="'+p+'" alt="1700553539693"></p><p>下载JDK，大家直接使用我们下载好的JDK就行。如下：</p><p><img src="'+e+'" alt="1702456642002"></p><p>双击安装包，按照下图引导，点击下一步即可安装。<strong>需要注意的是安装JDK后不像QQ一样会在桌面上显示一个图标，JDK安装后桌面上没有图标！！！</strong></p><p><img src="'+o+'" alt="1702426072004"></p><p>文件资源管理器打开JDK的安装目录的bin目录，会发现有两个命令工具 <code>javac.exe</code> <code>java.exe</code> ，这就是JDK提供给我们使用的<strong>编译工具和运行工具</strong>，如下：</p><p><img src="'+c+'" alt="1700554930304"></p><p>将来我们写好的Java程序都是高级语言，计算机底层是硬件不能识别这些语言。必须先通过javac编译工具进行翻译，然后再通过java执行工具执行才可以驱动机器干活。</p><h3 id="_2-配置环境变量" tabindex="-1"><a class="header-anchor" href="#_2-配置环境变量" aria-hidden="true">#</a> 2，配置环境变量</h3><p>什么是Path环境变量？</p><ul><li>Path环境变量是让系统程序的路径，方便程序员在命令行窗口的任意目录下启动程序；</li></ul><p>如何配置环境变量呢？</p><ul><li>比如把QQ的启动程序，配置到Path环境变量下就可以在任意目录下启动QQ，按照一下步骤操作。</li></ul><p>步骤如下：</p><p>**第一步：**先找到QQ启动程序所在的目录 <code>C:\\Program Files (x86)\\Tencent\\QQ\\Bin</code> ，复制这个路径</p><p><img src="'+l+'" alt="1700558927361"></p><p>**第二步：**按照下面的步骤，找到Path环境变量。首先找到此电脑，右键点击属性，可以按照下面的界面；点击【高级系统设置】，再点击【环境变量】</p><p><img src="'+i+'" alt="1700558960539"></p><p>双击Path后，点击新建，把QQ启动目录粘贴进来，不要忘记点确定，如下：</p><p><img src="'+u+'" alt="1700558994112"></p><p>**第三步：**配置好之后，检查是否配置成功。Win+R 输入cmd回车，打开命令行窗口。输入QQScLanucher，可以看到QQ启动了，如下：</p><p><img src="'+r+'" alt="1700559041473"></p><p>把JDK配置到Path中，我们把JDK的bin目录配置到Path环境变量下，这样就可以在任意目录下启动javac和java命令来完成编译和运行了。我们先配置Java_home环境变量，JAVA_HOME：告诉操作系统JDK安装在了哪个位置（将来其他技术要通过这个环境变量找JDK）。配置如下：</p><p>**第一步：**找到JDK的目录</p><p>**第二步：**将JDK的bin目录粘贴在Path环境变量后面</p><p><img src="'+d+'" alt="1702431281215"></p><p><strong>第三步：检测否配置成功</strong></p><p>验证JDK安装成功的方式：查询JDK的版本号。按下 Win + R ，在运行输入框中输入 cmd，敲回车。在命令行 窗口中分别输入javac –version 及 java –version看版本提示，如果版本提示与自己安装的版本号一致，则代表JDK环境搭建成功。如下：</p><p><img src="'+k+'" alt="1702431342025"></p><h3 id="_3-java入门程序" tabindex="-1"><a class="header-anchor" href="#_3-java入门程序" aria-hidden="true">#</a> 3，Java入门程序</h3><p>编写一个Java程序需要经过3个步骤：编写代码，编译代码，运行代码。如下：</p><p><img src="'+m+'" alt="1700555041461"></p><ul><li>编写代码：任何一个文本编辑器都可以些代码，如Windows系统自带的记事本</li><li>编译代码：将人能看懂的源代码（.java文件）转换为Java虚拟机能够执行的字节码文件（.class文件）</li><li>运行代码：将字节码文件交给Java虚拟机执行</li></ul><p>**第一步：**新建一个后缀为.java的文本文件 <code>HelloWorld.java</code> ，用记事本编写代码如下。</p><p><img src="'+v+`" alt="1702431821122"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>**第二步：**进入 <code>HelloWorld.java</code> 文件所在目录，在地址栏输入cmd回车，即可在此处打开命令行窗口。</p><p>编译：在命令行窗口输入编译命令 <code>javac HelloWorld</code> 完成编译，编译后会生成一个 <code>HelloWorld.class</code> 文件。</p><p><img src="`+b+'" alt="1702431851966"></p><p>编译后，得到字节码文件，如下：</p><p><img src="'+g+'" alt="1702431880532"></p><p>**第三步：**再接着输入 <code>java HelloWorld</code> 就可以运行了，运行结果如下</p><p><img src="'+h+'" alt="1702431914890"></p><h3 id="_4-jdk的组成" tabindex="-1"><a class="header-anchor" href="#_4-jdk的组成" aria-hidden="true">#</a> 4，JDK的组成</h3><p>JDK由JVM、核心类库、开发工具组成，如下：</p><p><img src="'+y+'" alt="1700555526026"></p><p>什么是JVM?</p><ul><li>JDK最核心的组成部分是JVM（Java Virtual Machine），它是Java虚拟机，真正运行Java程序的地方。</li></ul><p>什么是核心类库？</p><ul><li>它是Java本身写好的一些程序，给程序员调用的。 Java程序员并不是凭空开始写代码，是要基于核心类库提供的一些基础代码，进行编程。</li></ul><p>什么是JRE?</p><ul><li>JRE（Java Runtime Enviroment），意思是Java的运行环境；它是由JVM和核心类库组成的；如果你不是开发人员，只需要在电脑上安装JRE就可以运行Java程序。</li></ul><p>什么是开发工具呢？</p><ul><li>Java程序员写好源代码之后，需要编译成字节码，这里会提供一个编译工具叫做javac.exe，编写好源代码之后，想要把class文件加载到内存中运行，这里需要用到运行工具java.exe。除了编译工具和运行工具，还有一些其他的反编译工具、文档工具等待...</li></ul><p><strong>总结：</strong></p><ul><li>用JDK开发程序，交给JRE运行</li></ul><h2 id="三-idea" tabindex="-1"><a class="header-anchor" href="#三-idea" aria-hidden="true">#</a> 三，IDEA</h2><p>集成开发环境（ IDE, Integrated Development Environment ）</p><ul><li>把代码编写，编译，执行等多种功能综合到一起的开发工具，可以进行代码智能提示，错误提醒，项目管理等</li><li>常见的Java IDE工具有：Eclipse、MyEclipse、IntelliJ IDEA、Jbuilder、NetBeans等。</li></ul><h3 id="_1-idea下载和安装" tabindex="-1"><a class="header-anchor" href="#_1-idea下载和安装" aria-hidden="true">#</a> 1，IDEA下载和安装</h3><p>IDEA详细的安装和使用步骤如下：</p><ol><li>下载好安装包之后，双击打开安装向导，点击 Next 下一步。</li></ol><p><img src="'+w+'" alt="1702426522211"></p><ol start="2"><li>接下来选择安装路径，默认安装路径即可（如果需要按下面步骤更改）</li></ol><p><img src="'+_+'" alt="1702426539862"></p><p><img src="'+f+'" alt="1702426557047"></p><ol start="3"><li>选择 64 位启动，Next 下一步</li></ol><p><img src="'+S+'" alt="1702426575230"></p><ol start="4"><li>接下来这一步不用管，直接 install 即可</li></ol><p><img src="'+J+'" alt="1702426605707"></p><ol start="5"><li>等待安装进度条结束，点击【next】下一步，安装完成了</li></ol><p><img src="'+j+'" alt="1702426627866"></p><ol start="6"><li>第一次启动，不需要导入任何设置如图</li></ol><p><img src="'+x+'" alt="1702426642957"></p><p><img src="'+D+'" alt="1702426652099"></p><p><img src="'+E+'" alt="1702426662599"></p><ol start="7"><li>下面是选择主题（如果没有这一项就直接进行下一步）</li></ol><p><img src="'+K+'" alt="1702426681768"></p><h3 id="_2-java程序的工程结构" tabindex="-1"><a class="header-anchor" href="#_2-java程序的工程结构" aria-hidden="true">#</a> 2，Java程序的工程结构</h3><p>想要在IDEA正确的写一个Java程序，必须先认识一下IDEA的管理Java程序的工程结构。</p><ul><li>第一步：首先得在IDEA中创建一个Project（工程、也叫项目），后面统称为工程。理解成小区的院子。</li><li>第二步：需要在Project中创建Module（模块），一个工程中可以包含多个模块。理解成小区院子里面的每一栋楼。</li><li>第三步：需要在Module中新建Package（包），一个模块中可以有多个包。理解成每一栋楼的一层。</li><li>第四步：需要在Package中新建Class（类），一个包中可以包含多个类。理解成每一层的住户。</li></ul><p>创建工程，创建模块，创建包，创建类流程如下：</p><ol><li>创建一个空项目，本质就是一个文件夹，如下：</li></ol><p><img src="'+q+'" alt="1702433350761"></p><p><img src="'+H+'" alt="1702433404611"></p><p><img src="'+W+'" alt="1702433500516"></p><p>本质就是一个文件夹，如下：</p><p><img src="'+I+'" alt="1702433545970"></p><ol start="2"><li>创建新模块（module）</li></ol><p><img src="'+A+'" alt="1702433624846"></p><p><img src="'+Q+'" alt="1702433693492"></p><p><img src="'+M+'" alt="1702433763090"></p><p><img src="'+P+'" alt="1702433805532"></p><p><img src="'+C+'" alt="1702433834413"></p><ol start="3"><li>有了模块，就可以创建包（package），包的本质就是文件夹</li></ol><p><img src="'+L+'" alt="1702433896354"></p><p><img src="'+R+'" alt="1702433938511"></p><p><img src="'+O+'" alt="1702434033453"></p><ol start="4"><li>在一个包下面的创建一个类</li></ol><p><img src="'+B+'" alt="1702434088847"></p><p><img src="'+T+'" alt="1702434126955"></p><p><img src="'+V+'" alt="1702434147265"></p><ol start="5"><li>写代码，运行代码</li></ol><p><img src="'+F+'" alt="1702434268246"></p><p>源码编译成了字节码文件，字节码文件在哪里？</p><p><img src="'+N+'" alt="1702434377153"></p><p>查看之：</p><p><img src="'+X+'" alt="1702434431446"></p><h3 id="_3-idea各种配置" tabindex="-1"><a class="header-anchor" href="#_3-idea各种配置" aria-hidden="true">#</a> 3，IDEA各种配置</h3><p>主题配置：</p><p><img src="'+G+'" alt="1700560026675"></p><p>字体配置：</p><p><img src="'+z+'" alt="1700560037341"></p><p>背景色配置，把背景色的颜色值，调为204、238、200；就是豆沙绿的护眼色了：</p><p><img src="'+U+'" alt="1700560064717"></p><p>Idea 行注释设置，使其不从顶格开始，让其处于代码前开始：</p><ol><li>默认情况下的行注释 （以Java和XML文件为例），其注释都是顶格开始，不美观且不易一眼看出等级排行</li></ol><p>Java</p><p><img src="'+Y+'" alt="1702458984319"></p><p>XML</p><p><img src="'+$+'" alt="1702459008491"></p><ol start="2"><li>设置让其从代码处开始，步骤：File–&gt;Sttings–&gt;Editor–&gt;Code Style （以Java和XML为例，设置都是相同的）</li></ol><p>Java文件设置</p><p><img src="'+Z+'" alt="1702459069365"></p><p>XML文件设置</p><p><img src="'+nn+`" alt="1702459168059"></p><h3 id="_4-快捷键" tabindex="-1"><a class="header-anchor" href="#_4-快捷键" aria-hidden="true">#</a> 4，快捷键</h3><table><thead><tr><th><strong>快捷键</strong></th><th><strong>功能效果</strong></th></tr></thead><tbody><tr><td>main/psvm、sout、…</td><td>快速键入相关代码</td></tr><tr><td>Ctrl + D</td><td>复制当前行数据到下一行</td></tr><tr><td>Ctrl + Y</td><td>删除所在行，建议用Ctrl + X</td></tr><tr><td>Ctrl + ALT + L</td><td>格式化代码</td></tr><tr><td>ALT + SHIFT + ↑ , ALT + SHIFT + ↓</td><td>上下移动当前代码</td></tr><tr><td>Ctrl + / , Ctrl + Shift + /</td><td>对代码进行注释(讲注释的时候再说)</td></tr></tbody></table><p>快捷键其实有很多，这里列举的是现阶段我们用得比较多的，现在记住不也不要紧，以后经常用，用着用着就记住了。</p><h2 id="四-java基础语法" tabindex="-1"><a class="header-anchor" href="#四-java基础语法" aria-hidden="true">#</a> 四，Java基础语法</h2><h3 id="_1-注释" tabindex="-1"><a class="header-anchor" href="#_1-注释" aria-hidden="true">#</a> 1，注释</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">1.</span>单行注释：
	<span class="token comment">//后面根解释文字</span>
<span class="token number">2.</span>多行注释
    <span class="token comment">/*
    这里写注释文字
    可以写多行
    */</span>
<span class="token number">3.</span>文档注释
    <span class="token doc-comment comment">/**
    这里写文档注释
    也可以写多行，文档注释可以利用JDK的工具生成帮助文档
    */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>快捷键：</p><ul><li>Ctrl + / 单行注释（对当前行进行注释）</li><li>Ctrl + Shift + / 对选中的代码进行多行注释。</li></ul><h3 id="_2-字面量" tabindex="-1"><a class="header-anchor" href="#_2-字面量" aria-hidden="true">#</a> 2，字面量</h3><p>什么是字面量？</p><ul><li>字面量其实就是告诉程序员数据在程序中的书写格式。下面是常用的数据在程序中的书写格式。</li><li>对于字面量，大家只要能够正确写出各种数据就可以了</li></ul><p>代码演示：</p><p><img src="`+sn+`" alt="1702459664769"></p><p>参考代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wangcai<span class="token punctuation">.</span>hello</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 整数</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 小数</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">3.1415</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 字符：使用单引号包起来</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token char">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token char">&#39;旺&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token char">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 空格也是字符</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \\n是换行，是特殊字符</span>
        <span class="token comment">//System.out.println(&#39;\\t&#39;);  // \\t是制表符  相当于一个tab键</span>
        <span class="token comment">// 字符串用双引号包起来</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello word&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 布尔值： true false</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">%</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-变量" tabindex="-1"><a class="header-anchor" href="#_3-变量" aria-hidden="true">#</a> 3，变量</h3><p>什么是变量</p><ul><li>变量是用来记录程序中的数据的。其本质上是内存中的一块区域，你可以把这块区域理解成一个小盒子。</li><li>Java中定义变量和JS中定义变量，是有区别的。</li></ul><p>代码演示：</p><p><img src="`+an+`" alt="1702460132840"></p><p>参考代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wangcai<span class="token punctuation">.</span>hello</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;wangcai&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
       <span class="token comment">// int表示整数</span>
        <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        age <span class="token operator">=</span> age <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> info <span class="token operator">=</span> <span class="token string">&quot;wc今年&quot;</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">&quot;岁&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// double表示小数</span>
        <span class="token keyword">double</span> money <span class="token operator">=</span> <span class="token number">18.5</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// boolean表示布尔型</span>
        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// String表示字符串</span>
        <span class="token class-name">String</span> address <span class="token operator">=</span> <span class="token string">&quot;beijing&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;shahe&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>变量的小细节：</p><p><img src="`+tn+`" alt="1702460403768"></p><p>参考代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wangcai<span class="token punctuation">.</span>hello</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 在{}中定义的变量，这个变量只能在{}中访问，变量的有效范围叫变量的作用域</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">110</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//System.out.println(a);</span>

        <span class="token punctuation">{</span>
            <span class="token comment">// 在同一个作用域内，不能有相同的变量名</span>
            <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token comment">//int b = 2;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 变量没有赋值（初始化），是不能使用的</span>
            <span class="token keyword">int</span> c<span class="token punctuation">;</span>
            <span class="token comment">//System.out.println(c);</span>

            <span class="token comment">// 同一行，可以定义多个变量</span>
            <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">,</span> e <span class="token operator">=</span> <span class="token number">33</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-关键字" tabindex="-1"><a class="header-anchor" href="#_4-关键字" aria-hidden="true">#</a> 4，关键字</h3><p>Java中的关键字：</p><ul><li>关键字是java语言中有特殊含义的单词。比如用int表示整数，用double表示小数，等等！</li><li>我们学习Java的语法其本质就是学习这些关键字的含义，一共有50多个关键字，我们不是一次性把这些关键字学完，会在后续的课程中每天学一点，慢慢得你就都学会了。</li><li>关键字都是小写的，关键字在idea中有特殊颜色标记，默认是蓝色的。</li></ul><table><thead><tr><th><strong>abstract</strong></th><th><strong>assert</strong></th><th><strong>boolean</strong></th><th><strong>break</strong></th><th><strong>byte</strong></th></tr></thead><tbody><tr><td><strong>case</strong></td><td><strong>catch</strong></td><td><strong>char</strong></td><td><strong>class</strong></td><td><strong>const</strong></td></tr><tr><td><strong>continue</strong></td><td><strong>default</strong></td><td><strong>do</strong></td><td><strong>double</strong></td><td><strong>else</strong></td></tr><tr><td><strong>enum</strong></td><td><strong>extends</strong></td><td><strong>final</strong></td><td><strong>finally</strong></td><td><strong>float</strong></td></tr><tr><td><strong>for</strong></td><td><strong>goto</strong></td><td><strong>if</strong></td><td><strong>implements</strong></td><td><strong>import</strong></td></tr><tr><td><strong>instanceof</strong></td><td><strong>int</strong></td><td><strong>interface</strong></td><td><strong>long</strong></td><td><strong>native</strong></td></tr><tr><td><strong>new</strong></td><td><strong>package</strong></td><td><strong>private</strong></td><td><strong>protected</strong></td><td><strong>public</strong></td></tr><tr><td><strong>return</strong></td><td><strong>strictfp</strong></td><td><strong>short</strong></td><td><strong>static</strong></td><td><strong>super</strong></td></tr><tr><td><strong>switch</strong></td><td><strong>synchronized</strong></td><td><strong>this</strong></td><td><strong>throw</strong></td><td><strong>throws</strong></td></tr><tr><td><strong>transient</strong></td><td><strong>try</strong></td><td><strong>void</strong></td><td><strong>volatile</strong></td><td><strong>while</strong></td></tr></tbody></table><h3 id="_5-标识符" tabindex="-1"><a class="header-anchor" href="#_5-标识符" aria-hidden="true">#</a> 5，标识符</h3><p>标识符：</p><ul><li>类名，变量名其实都是标志符，取名字的规则，不能让我们随即便瞎取。有些规则是强制要求的，不遵守就会报错。还有一些规则是我们建议大家遵守的，这样取名字显得我们更加专业</li></ul><p>强制要求：必须遵守，不遵守就会报错</p><ul><li>最好是字母、数字、下划线、$组成</li><li>不能以数字开头</li><li>不能是Java的关键字</li></ul><p>建议遵守：按照下面的方式取名字会显得更加专业</p><ul><li>所有的名字要见名知意，便于自己和别人阅读</li><li>类名：首字母大写（大驼峰命名）</li><li>变量名：第二个单词开始首字母大写（小驼峰命名）</li></ul><h3 id="_6-数据的表示" tabindex="-1"><a class="header-anchor" href="#_6-数据的表示" aria-hidden="true">#</a> 6，数据的表示</h3><p>任何数据在计算机中都是以<strong>二进制</strong>表示的。整数在计算机中存储都是以二进制形式存储的。现在想要在计算机中存储一个整数6，转换为二进制是110，那么计算机中只是存110吗三位数字吗？ 其实不是的，<strong>计算机中最小的存储单位是字节（Byte），一个字节占8位（bit）</strong>，也就是说即使这个数据不足8位也需要用8位来存储。</p><p><img src="`+pn+'" alt="1700561889642"></p><p>字符并不是直接存储的，而是把每一个字符编为一个整数，存储的是字符对应整数的二进制形式。美国人搞了一套字符和整数的对应关系表，叫做ASCII编码表。</p><p><img src="'+en+'" alt="1700561944260"></p><p>再说一下图片的存储，把一张图片不断的放大，你会看到有马赛克的效果。你会发现图片中的每一个细节是由一个一个的小方格组成的，每一个小方格中其实就是一种颜色。任何一种颜色可以使用三原色来表示，简称RGB，其中R（红色），G（绿色），B（蓝色），而RGB中每一种颜色又用一个字节的整数来表示，最小值是0最大值是255。</p><p><img src="'+on+'" alt="1700562206401"></p><p>同样，视频和图片是一样的，把多张图片连续播放，在一秒钟内连续播放24张以上，由于人眼存在视觉暂留现象，人眼感受不到画面切换的时间间隔，就认为是连续的视频了。</p><p><img src="'+cn+'" alt="1700562366084"></p><p>声音是以波的形式传播的。我们可以把声波在表示在一个坐标系上，然后在坐标系上取一些点，把这些点的坐标值以二进制的形式存储到计算机中，这就是声音的存储原理。</p><p><img src="'+ln+'" alt="1700562402224"></p><h3 id="_7-数据类型" tabindex="-1"><a class="header-anchor" href="#_7-数据类型" aria-hidden="true">#</a> 7，数据类型</h3><p>Java的数据类型整体上来说分为两大类：</p><ul><li>基本数据类型</li><li>引用数据类型</li></ul><p><img src="'+un+'" alt="1700562724513"></p><p>整数和小数的默认类型：</p><ul><li>比如23，它默认就为int类型；如果加上后缀L，则为long类型</li><li>比如23.8，它默认为double类型；如果加上后缀F，则为float类型</li></ul><p>代码演示：</p><p><img src="'+rn+`" alt="1702465788378"></p><p>参考代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wangcai<span class="token punctuation">.</span>hello</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">//java中数据类型分两类：</span>
       <span class="token comment">// 1）基本数据类型</span>
       <span class="token comment">//         整型</span>
       <span class="token comment">//            byte     1个字节</span>
       <span class="token comment">//            short    2个字节</span>
       <span class="token comment">//            int（默认的）  4个字节</span>
       <span class="token comment">//            long     8个字节</span>
       <span class="token comment">//         浮点数（小数）</span>
       <span class="token comment">//            float    4个字节</span>
       <span class="token comment">//            double（默认的）  8个字节</span>
       <span class="token comment">//         字符</span>
       <span class="token comment">//            char     2个字节</span>
       <span class="token comment">//         布尔值</span>
       <span class="token comment">//            boolean    1个字节</span>
       <span class="token comment">// 2）引用数据类型</span>

       <span class="token keyword">byte</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">short</span> b <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>
       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">111</span><span class="token punctuation">;</span>
       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">long</span> d <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>
       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">float</span> e <span class="token operator">=</span> <span class="token number">1.1f</span><span class="token punctuation">;</span>
       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">double</span> f <span class="token operator">=</span> <span class="token number">1.1111</span><span class="token punctuation">;</span>
       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">char</span> h <span class="token operator">=</span> <span class="token char">&#39;中&#39;</span><span class="token punctuation">;</span>
       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-数据类型转化" tabindex="-1"><a class="header-anchor" href="#_8-数据类型转化" aria-hidden="true">#</a> 8，数据类型转化</h3><p>分类：</p><ul><li>自动类型转化</li><li>强制类型转化</li></ul><p>自动类型转化：</p><p><img src="`+dn+'" alt="1700562943292"></p><p>自动类型转化之表达式类型转化</p><ul><li>所谓表达式指的是几个变量或者几个数据一起参与运算的式子</li><li>多种数据类型参与运算，其结果以大的数据类型为准</li><li>byte, short, char 三种类型数据在和其他类型数据运算时，都会转换为int类型再运算</li></ul><p>代码演示：</p><p><img src="'+kn+`" alt="1702466116315"></p><p>参考代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wangcai<span class="token punctuation">.</span>hello</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 自动类型转转的规则：只能把小的类型赋值给大的类型</span>
        <span class="token comment">//byte =&gt; short =&gt; int =&gt; long =&gt; float =&gt; double</span>
        <span class="token comment">//char =&gt; int</span>
        <span class="token keyword">byte</span> a <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">110</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> m<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">double</span> q <span class="token operator">=</span> <span class="token number">1.11</span><span class="token punctuation">;</span>
        <span class="token comment">//float p = q;   // 不能把double类型的数据赋值给float类型</span>

        <span class="token keyword">byte</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">short</span> j <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>强制类型转化</p><ul><li>强行将范围大的数据，赋值给范围小的变量也是可以的，这里就需要用到强制类型转换</li><li>格式：目标数据类型 变量名 = (目标数据类型)被转换的数据</li><li>强制类型转化，有数据丢失风险</li></ul><p>代码演示：</p><p><img src="`+mn+`" alt="1702466368453"></p><p>参考代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wangcai<span class="token punctuation">.</span>hello</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 把大类型转化成小类型，就会用到强制类型转化</span>

        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">110</span><span class="token punctuation">;</span>
        <span class="token comment">//byte b = a;   // 不OK</span>

        <span class="token comment">// 强制类型转化  强制把int类型，转化成byte类型</span>
        <span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>a<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 强制类型转化，有数据丢失的风险</span>
        <span class="token keyword">double</span> c <span class="token operator">=</span> <span class="token number">66.66</span><span class="token punctuation">;</span>
        <span class="token comment">//int d = c;      // 不OK</span>
        <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>c<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-运算符的分类" tabindex="-1"><a class="header-anchor" href="#_9-运算符的分类" aria-hidden="true">#</a> 9，运算符的分类</h3><p>运算符就是参与运算的符号。Java提供的运算符有很多种，可以分为下面几种：</p><ul><li>基本算术运算符</li><li>自增自减运算符</li><li>赋值运算符</li><li>关系运算符</li><li>逻辑运算符</li><li>三元运算符</li></ul><h3 id="_10-算术运算符" tabindex="-1"><a class="header-anchor" href="#_10-算术运算符" aria-hidden="true">#</a> 10，算术运算符</h3><p>代码演示：</p><p><img src="`+vn+`" alt="1702466913278"></p><p>参考代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wangcai<span class="token punctuation">.</span>hello</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">5.0</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">*</span>i<span class="token operator">/</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">%</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-自增自减运算符" tabindex="-1"><a class="header-anchor" href="#_11-自增自减运算符" aria-hidden="true">#</a> 11，自增自减运算符</h3><p>代码演示：</p><p><img src="`+bn+`" alt="1702467118484"></p><p>参考代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wangcai<span class="token punctuation">.</span>hello</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ++在后是旧值</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> a<span class="token operator">++</span><span class="token punctuation">;</span>

        <span class="token comment">//++在前是新值</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token operator">++</span>c<span class="token punctuation">;</span>
        <span class="token comment">//int c = ++a;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_12-赋值运算符" tabindex="-1"><a class="header-anchor" href="#_12-赋值运算符" aria-hidden="true">#</a> 12，赋值运算符</h3><p>代码演示：</p><p><img src="`+gn+`" alt="1702467313105"></p><p>参考代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wangcai<span class="token punctuation">.</span>hello</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token comment">//a = a + b;</span>
        a <span class="token operator">+=</span> b<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">byte</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
       <span class="token keyword">byte</span> y <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
       <span class="token comment">// 两个byte类型相加，最终会提升成int类型</span>
       <span class="token comment">//x = x + y;    // 不OK</span>
        x <span class="token operator">+=</span> y<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_13-关系运算符" tabindex="-1"><a class="header-anchor" href="#_13-关系运算符" aria-hidden="true">#</a> 13，关系运算符</h3><p>代码演示：</p><p><img src="`+hn+`" alt="1702467409289"></p><p>参考代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wangcai<span class="token punctuation">.</span>hello</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_14-逻辑运算符" tabindex="-1"><a class="header-anchor" href="#_14-逻辑运算符" aria-hidden="true">#</a> 14，逻辑运算符</h3><p>这个和JS的逻辑运算符略有区别：</p><p><img src="`+yn+'" alt="1700563853540"></p><p>代码演示：</p><p><img src="'+wn+`" alt="1702467658664"></p><p>参考代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wangcai<span class="token punctuation">.</span>hello</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">double</span> a <span class="token operator">=</span> <span class="token number">1.1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token comment">// 前后两个条件都为true,结果才为true</span>
        <span class="token keyword">boolean</span> res <span class="token operator">=</span> a<span class="token operator">&gt;</span><span class="token number">1</span> <span class="token operator">&amp;</span> b<span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 只要多个条件中有一个是true，结果就是true</span>
        <span class="token keyword">boolean</span> res2 <span class="token operator">=</span> a<span class="token operator">&gt;</span><span class="token number">2</span> <span class="token operator">|</span> b<span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// ! 取反的意思</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 前后条件的结果相同时，返回false，不同时，返回true</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">^</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">^</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">^</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">^</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_15-三元运算符" tabindex="-1"><a class="header-anchor" href="#_15-三元运算符" aria-hidden="true">#</a> 15，三元运算符</h3><p>和JS是一样的，格式:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>关系表达式<span class="token operator">?</span> 值<span class="token number">1</span> <span class="token operator">:</span> 值<span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_16-获取用户输入" tabindex="-1"><a class="header-anchor" href="#_16-获取用户输入" aria-hidden="true">#</a> 16，获取用户输入</h3><p>**第一步：**在class类上导包：一般不需要我们自己做，idea工具会自动帮助我们导包</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>**第二步：**得到一个用于键盘扫描器对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//Scanner是键盘扫描器对象(你就把它理解成一个东西)，这个东西有录入的功能</span>
<span class="token comment">//sc是给这个东西取的名字</span>
<span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>**第3步：**开始调用sc的功能，来接收用户键盘输入的数据。</p><p><img src="`+_n+`" alt="1702468416933"></p><p>参考代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wangcai<span class="token punctuation">.</span>hello</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你的年龄：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> age <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;我的年龄是:&quot;</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你的姓名：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> name <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;我的名字是:&quot;</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,257),Jn=[Sn];function jn(xn,Dn){return s(),a("div",null,Jn)}const Kn=n(fn,[["render",jn],["__file","01-JavaSEyufajichu01.html.vue"]]);export{Kn as default};
